{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/ruler/ruler.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/objects/annotation.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = void 0;\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var trigger;\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)));\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj, oldValues);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector, oldValues);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj.shape.type === 'SwimLane') {\n                connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n            }\n            if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                    this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                    target = this.diagram.getObject(target.parentId);\n                }\n            }\n            if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                target.container && target.container.type === 'Canvas' && target.isLane &&\n                obj.isLane && target.parentId === obj.parentId) {\n                laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                history.isPreventHistory = true;\n            }\n            else {\n                var parentNode = this.diagram.nameTable[obj.parentId];\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    obj.offsetX = helperObject.offsetX;\n                    obj.offsetY = helperObject.offsetY;\n                    if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                        obj.width = helperObject.width;\n                        obj.height = helperObject.height;\n                    }\n                    obj.rotateAngle = helperObject.rotateAngle;\n                }\n                var undoElement = void 0;\n                if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                    this.diagram.startGroupAction();\n                    hasGroup = true;\n                }\n                if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                    var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                    undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                    if (index > -1) {\n                        var children = parentNode.children;\n                        children.splice(children.indexOf(obj.id), 1);\n                        this.diagram.nameTable[obj.id].parentId = '';\n                        hasStack = true;\n                        parentNode.wrapper.children.splice(index, 1);\n                    }\n                }\n                moveChildInStack(obj, target, this.diagram, this.action);\n                parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                    (this.diagram.nameTable[obj.parentId] || obj);\n                if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                    parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                    parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                    isChangeProperties = true;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                }\n                if (obj.shape.lanes) {\n                    this.updateLaneChildNode(obj);\n                }\n                if (isChangeProperties) {\n                    parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                    parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                }\n                if (hasStack) {\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    var entry = {\n                        type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                        undoObject: undoElement, category: 'Internal'\n                    };\n                    if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                        this.diagram.addHistoryEntry(entry);\n                    }\n                }\n                if (obj && obj.container && (obj.container.type === 'Stack' ||\n                    (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                    });\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = false;\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, this.diagram);\n            history.hasStack = hasGroup;\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition, updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo);\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","verticalAlignment","horizontalAlignment","initObject","nodes","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","scale","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","updateDiagramObject","renderContainerHelper","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","maxHeight","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","Size","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","currentSymbol","getObject","indexOf","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","phases","k","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevChild","laneHeader","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","property","Array","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","canMeasure","textNodes","textWrapBounds","imageSource","stretch","Hyperlink","Annotation","Complex","defaultValue","isArray","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Connect","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","refreshCanvasDiagramLayer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","allowDrag","refreshPalettes","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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CU,IACImB,WAASz+B,eAAaoD,UACvBsf,EAAQka,UAAW,WAAQ,IAC9BU,IACImB,WAAS,QACV/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,WAAS,gBACV/b,EAAQka,UAAW,sBAAmB,IACzCU,IACIqG,aAAYgnB,KACbjoC,EAAQka,UAAW,mBAAgB,IACtCU,IACIqG,aAAYknB,KACbnoC,EAAQka,UAAW,oBAAiB,IACvCU,IACIqG,aAAYymB,KACb1nC,EAAQka,UAAW,mBAAgB,IACtCU,IACIqG,aAAYm7C,KACbp8D,EAAQka,UAAW,4BAAyB,IAC/CU,IACImE,gBAAetjC,KAChBukB,EAAQka,UAAW,YAAS,IAC/BU,IACImB,cACD/b,EAAQka,UAAW,oBAAiB,IACvCU,IACImE,gBAAe/kC,KAChBgmB,EAAQka,UAAW,iBAAc,IACpCU,IACImB,gBACD/b,EAAQka,UAAW,oBAAiB,IACvCU,IACIqG,aAAYiE,KACbllB,EAAQka,UAAW,cAAW,IACjCU,IACIqG,aAAYqnB,KACbtoC,EAAQka,UAAW,yBAAsB,IAC5CU,IACImB,cACD/b,EAAQka,UAAW,cAAW,IACjCU,IACImB,cACD/b,EAAQka,UAAW,qBAAkB,IACxCU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,cACD/b,EAAQka,UAAW,2BAAwB,IAC9CU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,cACD/b,EAAQka,UAAW,qBAAkB,IACxCU,IACImB,cACD/b,EAAQka,UAAW,wBAAqB,IAC3CU,IACImB,cACD/b,EAAQka,UAAW,oBAAiB,IACvCU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACIqG,aAAY5mC,KACb2lB,EAAQka,UAAW,oBAAiB,IACvCU,IACIqG,aAAY0mB,KACb3nC,EAAQka,UAAW,qBAAkB,IACxCU,IACIqG,aAAYsnB,KACbvoC,EAAQka,UAAW,aAAU,IAChCU,IACIqG,aAAY6U,KACb91B,EAAQka,UAAW,qBAAkB,IACxCU,IACIu9D,WACDn4E,EAAQka,UAAW,iBAAc,IACpCU,IACIu9D,WACDn4E,EAAQka,UAAW,gBAAa,IACnCU,IACIu9D,WACDn4E,EAAQka,UAAW,gBAAa,IACnCU,IACIu9D,WACDn4E,EAAQka,UAAW,eAAY,IAClCU,IACIu9D,WACDn4E,EAAQka,UAAW,YAAS,IAC/BU,IACIu9D,WACDn4E,EAAQka,UAAW,oBAAiB,IACvCU,IACIu9D,WACDn4E,EAAQka,UAAW,kBAAe,IACrCU,IACIu9D,WACDn4E,EAAQka,UAAW,eAAY,IAClCU,IACIu9D,WACDn4E,EAAQka,UAAW,mBAAgB,IACtCU,IACIu9D,WACDn4E,EAAQka,UAAW,sBAAmB,IACzCU,IACIu9D,WACDn4E,EAAQka,UAAW,iBAAc,IACpCU,IACIu9D,WACDn4E,EAAQka,UAAW,uBAAoB,IAC1CU,IACIu9D,WACDn4E,EAAQka,UAAW,wBAAqB,IAC3CU,IACIu9D,WACDn4E,EAAQka,UAAW,wBAAqB,IAC3CU,IACIu9D,WACDn4E,EAAQka,UAAW,qBAAkB,IACxCU,IACIu9D,WACDn4E,EAAQka,UAAW,qBAAkB,IACxCU,IACIu9D,WACDn4E,EAAQka,UAAW,wBAAqB,IAC3CU,IACIu9D,WACDn4E,EAAQka,UAAW,mBAAgB,IACtCU,IACIu9D,WACDn4E,EAAQka,UAAW,uBAAoB,IAC1CU,IACIu9D,WACDn4E,EAAQka,UAAW,wBAAqB,IAC3CU,IACIu9D,WACDn4E,EAAQka,UAAW,cAAW,IACjCU,IACIu9D,WACDn4E,EAAQka,UAAW,iBAAc,IACpCU,IACIu9D,WACDn4E,EAAQka,UAAW,iBAAc,IACpCU,IACIu9D,WACDn4E,EAAQka,UAAW,gBAAa,IACnCU,IACIu9D,WACDn4E,EAAQka,UAAW,sBAAmB,IACzCU,IACIu9D,WACDn4E,EAAQka,UAAW,kCAA+B,IACrDU,IACIu9D,WACDn4E,EAAQka,UAAW,uBAAoB,IAC1CU,IACImE,gBAAe0jC,KAChBziD,EAAQka,UAAW,aAAU,IAChCU,IACIu9D,WACDn4E,EAAQka,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"}