{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: this.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: this.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.PreventZIndexOnDragging;\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventZIndexOnDragging;\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change)\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(currentObj.id + '_html_element', elementId);\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'] - this.size;\n        var top = diagram.spatialSearch['pageTop'] - this.size;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    grid_1.nodeId = [];\n                    grid_1.walkable = true;\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","isBlazor","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Port","Complex","Connect","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","updateEventValue","addNodeToLane","laneId","hideTooltip","addNode","addConnector","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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AOhf,KAAKxS,QAASoiG,EAAW5vF,KAAK81D,WAClDo6B,eAAalxE,OAAOhf,KAAKxS,QAASkiG,EAAW1vF,KAAK+1D,SAClDm6B,eAAalxE,OAAOhf,KAAKxS,QALV,QAK6BwS,KAAKuzI,OACjDrjD,eAAalxE,OAAO5c,SALD,UAKyBpC,KAAKqqE,UAErDrkC,IACImB,WAAS,MACVynG,EAActpG,UAAW,gBAAa,IACzCU,IACImB,WAAS,SACVynG,EAActpG,UAAW,YAAS,IACrCU,IACImB,WAAS,SACVynG,EAActpG,UAAW,aAAU,IACtCU,IACIqC,gBAAeqmG,KAChBE,EAActpG,UAAW,eAAY,IACxCU,IACImB,cACDynG,EAActpG,UAAW,oBAAiB,IAC7CU,IACImB,cACDynG,EAActpG,UAAW,iBAAc,IAC1CU,IACImB,cACDynG,EAActpG,UAAW,oBAAiB,IAC7CU,IACImB,cACDynG,EAActpG,UAAW,4BAAyB,IACrDU,IACImB,cACDynG,EAActpG,UAAW,wBAAqB,IACjDU,IACImB,cACDynG,EAActpG,UAAW,kBAAe,IAC3CU,IACImB,cACDynG,EAActpG,UAAW,mBAAgB,IAC5CU,IACIuH,WAAU19C,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAMo4C,KACvDymG,EAActpG,UAAW,mBAAgB,IAC5CU,IACImB,YAAS,IACVynG,EAActpG,UAAW,gBAAa,IACzCU,IACIuH,aAAYohG,KACbC,EAActpG,UAAW,oBAAiB,IAC7CU,IACImB,YAAS,IACVynG,EAActpG,UAAW,mBAAgB,IAC5CU,IACImB,YAAS,IACVynG,EAActpG,UAAW,sBAAmB,IAC/CU,IACImB,WAAS,aACVynG,EAActpG,UAAW,iBAAc,IAC1CU,IACIkhE,WACD0nC,EAActpG,UAAW,6BAA0B,IACtDU,IACImB,cACDynG,EAActpG,UAAW,sBAAmB,IAC/CU,IACImB,cACDynG,EAActpG,UAAW,mBAAgB,IAC5CU,IACImB,cACDynG,EAActpG,UAAW,2BAAwB,IACpDU,IACImB,cACDynG,EAActpG,UAAW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"}