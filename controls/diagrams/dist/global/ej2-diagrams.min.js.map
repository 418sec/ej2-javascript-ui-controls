{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/objects/preview.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/icon.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/diagram/layoutinfo.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/utility/diff-map.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getTemplateContent } from '../utility/dom-util';\nimport { SymbolSize } from './preview';\nvar getConnectorType = function (obj) {\n    if (isBlazor()) {\n        return DiagramConnectorShape;\n    }\n    else {\n        if (obj) {\n            switch (obj.type) {\n                case 'Bpmn':\n                    return BpmnFlow;\n                case 'UmlActivity':\n                    return ActivityFlow;\n                case 'UmlClassifier':\n                    return RelationShip;\n                default:\n                    return ConnectorShape;\n            }\n        }\n        return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramConnectorSegment;\n        }\n        else {\n            switch (obj.type) {\n                case 'Straight':\n                    return StraightSegment;\n                case 'Bezier':\n                    return BezierSegment;\n                case 'Orthogonal':\n                    return OrthogonalSegment;\n                default:\n                    return StraightSegment;\n            }\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar DiagramConnectorSegment = /** @class */ (function (_super) {\n    __extends(DiagramConnectorSegment, _super);\n    function DiagramConnectorSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    DiagramConnectorSegment.prototype.getClassName = function () {\n        return 'DiagramConnectorSegment';\n    };\n    __decorate([\n        Property('Straight')\n    ], DiagramConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramConnectorSegment.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector2\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"direction\", void 0);\n    return DiagramConnectorSegment;\n}(ChildProperty));\nexport { DiagramConnectorSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connector shape for blazor\n */\nvar DiagramConnectorShape = /** @class */ (function (_super) {\n    __extends(DiagramConnectorShape, _super);\n    function DiagramConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], DiagramConnectorShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Directional')\n    ], DiagramConnectorShape.prototype, \"associationType\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], DiagramConnectorShape.prototype, \"relationship\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], DiagramConnectorShape.prototype, \"multiplicity\", void 0);\n    __decorate([\n        Property('Sequence')\n    ], DiagramConnectorShape.prototype, \"bpmnFlow\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"message\", void 0);\n    __decorate([\n        Property('Normal')\n    ], DiagramConnectorShape.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"association\", void 0);\n    __decorate([\n        Property('Object')\n    ], DiagramConnectorShape.prototype, \"umlActivityFlow\", void 0);\n    __decorate([\n        Property(30)\n    ], DiagramConnectorShape.prototype, \"exceptionFlowHeight\", void 0);\n    return DiagramConnectorShape;\n}(ChildProperty));\nexport { DiagramConnectorShape };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                var flow = (isBlazor() ? this.shape.bpmnFlow : this.shape.flow);\n                switch (flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                var activityFlow = (isBlazor() ? this.shape.umlActivityFlow :\n                    this.shape.flow);\n                switch (activityFlow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id, diagram.annotationTemplate));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId, annotationTemplate) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            textele = getTemplateContent(textele, annotation, annotationTemplate);\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message' ||\n                    (isBlazor() && connector.shape.bpmnFlow === 'Message')) {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception' || (isBlazor() &&\n                    connector.shape.umlActivityFlow === 'Exception')) {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    diagram.enableServerDataBinding(false);\n    var object;\n    var container;\n    var nodes;\n    if ((!isBlazor()) || (isBlazor() && (diagram.diagramActions & DiagramAction.ToolAction))) {\n        if (diagram.selectedObject.helperObject) {\n            nodes = diagram.selectedObject.helperObject;\n        }\n        else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n            if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n                object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n                container = diagram.selectedItems.wrapper.children[0];\n            }\n            else {\n                object = obj;\n                if (isBlazor()) {\n                    if (obj === diagram.selectedItems.nodes[0]) {\n                        container = diagram.selectedItems.wrapper;\n                    }\n                    else {\n                        container = obj.wrapper;\n                    }\n                }\n                else {\n                    container = diagram.selectedItems.wrapper;\n                }\n            }\n            diagram.selectedObject.actualObject = object;\n            if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n                checkParentAsContainer(diagram, object))\n                || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n                ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n                var node = {\n                    id: 'helper',\n                    rotateAngle: container.rotateAngle,\n                    offsetX: container.offsetX, offsetY: container.offsetY,\n                    minWidth: container.minWidth, minHeight: container.minHeight,\n                    maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                    width: container.actualSize.width,\n                    height: container.actualSize.height,\n                    style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n                };\n                nodes = createHelper(diagram, node);\n                diagram.selectedObject.helperObject = nodes;\n            }\n        }\n    }\n    diagram.enableServerDataBinding(true);\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content,\n                style: shape.header.annotation.style ? shape.header.annotation.style : undefined,\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270,\n                style: shape.phases[phaseIndex].header.annotation.style\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [\n                    {\n                        id: shape.lanes[laneIndex].header.annotation.id,\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0,\n                        style: shape.lanes[laneIndex].header.annotation.style,\n                    }\n                ],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if (shape.phaseSize === 0 && targetIndex === 0) {\n                        if (shape.header && shape.hasHeader) {\n                            grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                temp = lanes[sourceLaneIndex];\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function getSpaceValue(intervals, isLine, i, space) {\n    space = !isLine ? ((intervals[i - 1] !== undefined) ? intervals[i - 1] + space : 0) : space;\n    return space;\n}\n/**\n * @private\n */\nexport function getInterval(intervals, isLine) {\n    var newInterval = [];\n    if (!isLine) {\n        for (var k = 0; k < intervals.length; k++) {\n            newInterval.push(intervals[k]);\n        }\n        newInterval.push(intervals[newInterval.length - 2]);\n        newInterval.push(intervals[newInterval.length - 2]);\n    }\n    else {\n        newInterval = intervals;\n    }\n    return newInterval;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        var shape = (isBlazor() ? child.shape.umlActivityShape :\n            child.shape.shape);\n        switch (shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        var flow = (isBlazor() ?\n            child.shape.umlActivityFlow : child.shape.flow);\n        switch (flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/* tslint:disable */\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            var bpmnFlow = (isBlazor() ? child.shape.bpmnFlow : child.shape.flow);\n            switch (bpmnFlow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            var flow = (isBlazor() ?\n                child.shape.umlActivityFlow : child.shape.flow);\n            switch (flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation' ||\n                child.shape.relationship === undefined) {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/* tslint:enable */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n    if (!actualNode.hasSubTree && defaultValue.canEnableSubTree) {\n        actualNode.orientation = node.layoutInfo.orientation;\n        actualNode.type = node.layoutInfo.type;\n        if (node.layoutInfo.offset !== actualNode.offset && (node.layoutInfo.offset) !== undefined) {\n            actualNode.offset = node.layoutInfo.offset;\n        }\n    }\n    node.layoutInfo.hasSubTree = actualNode.hasSubTree;\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.enableServerDataBinding(false);\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    diagram.enableServerDataBinding(true);\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                if (style.gradient) {\n                    updateGradient(changedObject.gradient, style.gradient);\n                    break;\n                }\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = ((isBlazor() ? actualObject.shape.basicShape === 'Rectangle' :\n                actualObject.shape.shape === 'Rectangle')) ? new DiagramElement() : new PathElement();\n            if ((!isBlazor() && actualObject.shape.shape === 'Polygon') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Polygon')) {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape((isBlazor() ? actualObject.shape.basicShape :\n                    actualObject.shape.shape));\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if ((!isBlazor() && actualObject.shape.shape === 'Rectangle') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Rectangle')) {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            var shape = (isBlazor()) ? actualObject.shape.flowShape : actualObject.shape.shape;\n            flowShapeElement.data = getFlowShape(shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && ((isBlazor() && newValues.shape.flowShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.flowShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' &&\n            ((isBlazor() && newValues.shape.umlActivityShape !== undefined) ||\n                (!isBlazor() && newValues.shape.shape !== undefined))) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (((isBlazor() && newValues.shape.basicShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.basicShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    if (!isBlazor()) {\n        actualObject.shape.shape = newValues.shape.shape;\n    }\n    else {\n        actualObject.shape.umlActivityShape = newValues.shape.umlActivityShape;\n    }\n    var shapes = !isBlazor() ? actualObject.shape.shape :\n        actualObject.shape.umlActivityShape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if ((isBlazor() && actualObject.shape.umlActivityShape === 'InitialNode') ||\n        (!isBlazor() && actualObject.shape.shape === 'InitialNode')) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode')) ||\n        ((isBlazor() && (actualObject.shape.umlActivityShape === 'ForkNode' ||\n            actualObject.shape.umlActivityShape === 'JoinNode')))) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n        (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode')) {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var shape = (isBlazor() ? node.shape.umlActivityShape : node.shape.shape);\n    var umlActivityShapeData = getUMLActivityShape(shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    if (node) {\n        node = node;\n        for (var i = 0; i < node.ports.length; i++) {\n            if (id === node.ports[i].id) {\n                return node.ports[i];\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(args.target);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target },\n            position: arg.position, cancel: arg.cancel\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var checkPort = function (node, element) {\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === element.id.split('_')[1]) {\n            return true;\n        }\n    }\n    return false;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if ((navigator.platform.indexOf('Mac') >= 0 || navigator.platform.indexOf('iPad') >= 0\n        || navigator.platform.indexOf('iPhone') >= 0 || navigator.platform.indexOf('MacIntel') >= 0)\n        && (Browser.info.name === 'safari' || Browser.info.name === 'webkit')) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canMeasureDecoratorPath(objects) {\n    if (objects.indexOf('shape') !== -1 || objects.indexOf('pathData') !== -1 ||\n        objects.indexOf('width') !== -1 || objects.indexOf('height') !== -1) {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, cloneObject } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement, cloneBlazorObject } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var domTable = 'domTable';\n    var expandCollapse = null;\n    if (!window[domTable][diagramId + '_gridline']) {\n        var diagramGridSvg = getGridLayerSvg(diagramId);\n        expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n        window[domTable][diagramId + '_gridline'] = expandCollapse;\n    }\n    else {\n        expandCollapse = window[domTable][diagramId + '_gridline'];\n    }\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var domTable = 'domTable';\n    if (!window[domTable][diagramId + 'html_layer']) {\n        var element = getDiagramElement(diagramId);\n        var elementcoll = void 0;\n        elementcoll = element.getElementsByClassName('e-html-layer');\n        htmlLayer = elementcoll[0];\n        window[domTable][diagramId + 'html_layer'] = htmlLayer;\n    }\n    else {\n        htmlLayer = window[domTable][diagramId + 'html_layer'];\n    }\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml, nodeObject) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    var isSvg = false;\n    if (node instanceof Node) {\n        sentNode = node;\n        if (node.shape.type === 'Native') {\n            isSvg = true;\n        }\n        var blazor = 'Blazor';\n        if (isBlazor()) {\n            content = 'diagramsf_node_template';\n            sentNode = cloneBlazorObject(node);\n        }\n    }\n    else {\n        sentNode = node;\n        //new\n        if (isBlazor()) {\n            sentNode = cloneBlazorObject(node);\n            content = 'diagramsf_annotation_template';\n        }\n    }\n    var item;\n    if (typeof element.content === 'string' && (!element.isTemplate || isBlazor())) {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n            //new\n            // for (item of compiledString(sentNode, null, null, content, undefined, undefined, isSvg)) {\n            //     div.appendChild(item);\n            // }\n        }\n    }\n    else if (element.isTemplate) {\n        var compiledString = void 0;\n        compiledString = element.getNodeTemplate()(cloneObject(nodeObject), undefined, 'template', undefined, undefined, false);\n        for (var i = 0; i < compiledString.length; i++) {\n            div.appendChild(compiledString[i]);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return element.isTemplate ?\n        div : (isHtml ? div.cloneNode(true) : div.cloneNode(true));\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        (options.textWrapping === 'Wrap' || options.textWrapping === 'WrapWithOverflow')) {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n/** @private */\nexport function getTemplateContent(annotationcontent, annotation, annotationTemplate) {\n    if (annotationTemplate && !annotation.template) {\n        annotationcontent.isTemplate = true;\n        annotationcontent.template = annotationcontent.content = getContent(annotationcontent, true, annotation);\n    }\n    else {\n        annotationcontent.content = annotation.template;\n    }\n    return annotationcontent;\n}\n","import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function templateCompiler(template) {\n    if (template) {\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'sourceID',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramGradient;\n        }\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar DiagramGradient = /** @class */ (function (_super) {\n    __extends(DiagramGradient, _super);\n    function DiagramGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], DiagramGradient.prototype, \"r\", void 0);\n    return DiagramGradient;\n}(Gradient));\nexport { DiagramGradient };\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n/**\n * Defines the style of shape/path\n */\nvar DiagramShapeStyle = /** @class */ (function (_super) {\n    __extends(DiagramShapeStyle, _super);\n    function DiagramShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], DiagramShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], DiagramShapeStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], DiagramShapeStyle.prototype, \"gradient\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(12)\n    ], DiagramShapeStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Arial')\n    ], DiagramShapeStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], DiagramShapeStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('Center')\n    ], DiagramShapeStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShapeStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], DiagramShapeStyle.prototype, \"textWrapping\", void 0);\n    return DiagramShapeStyle;\n}(ChildProperty));\nexport { DiagramShapeStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * @private\n */\nexport var BlazorAction;\n(function (BlazorAction) {\n    /** Return the layout value is true when doLayout is called   */\n    BlazorAction[BlazorAction[\"Default\"] = 0] = \"Default\";\n    /** Need to return the layout value when doLayout is called  */\n    BlazorAction[BlazorAction[\"expandNode\"] = 2] = \"expandNode\";\n    /** Enabled during the mouse interaction  */\n    BlazorAction[BlazorAction[\"interaction\"] = 4] = \"interaction\";\n})(BlazorAction || (BlazorAction = {}));\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n    /** Indicates whether group dragging has been activated */\n    DiagramAction[DiagramAction[\"isGroupDragging\"] = 16384] = \"isGroupDragging\";\n    /** Indicates whether drag is initiated by mouse  */\n    DiagramAction[DiagramAction[\"DragUsingMouse\"] = 32768] = \"DragUsingMouse\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n    DiagramEvent[DiagramEvent[\"onDoBindingInit\"] = 32] = \"onDoBindingInit\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    // tslint:disable-next-line:no-any\n    function Port(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.inEdges = [];\n        _this.outEdges = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"outEdges\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"inEdges\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property('String')\n    ], Annotation.prototype, \"annotationType\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { DiagramTooltip } from './tooltip';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /** @private */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.isTemplate) {\n                this.template = getContent(this, true);\n            }\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * customize the size of the individual palette items.\n */\nvar SymbolSize = /** @class */ (function (_super) {\n    __extends(SymbolSize, _super);\n    function SymbolSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"height\", void 0);\n    return SymbolSize;\n}(ChildProperty));\nexport { SymbolSize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableNodes\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableConnectors\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar LayoutInfo = /** @class */ (function (_super) {\n    __extends(LayoutInfo, _super);\n    function LayoutInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Horizontal')\n    ], LayoutInfo.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Center')\n    ], LayoutInfo.prototype, \"type\", void 0);\n    __decorate([\n        Property(undefined)\n    ], LayoutInfo.prototype, \"offset\", void 0);\n    __decorate([\n        Property(false)\n    ], LayoutInfo.prototype, \"enableRouting\", void 0);\n    __decorate([\n        Property([])\n    ], LayoutInfo.prototype, \"children\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"assistants\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"level\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"hasSubTree\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"rows\", void 0);\n    return LayoutInfo;\n}(ChildProperty));\nexport { LayoutInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { IconShape } from './icon';\nimport { measurePath, getContent, getTemplateContent } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nimport { LayoutInfo } from '../diagram/layoutinfo';\nimport { SymbolSize } from './preview';\nvar getShapeType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramShape;\n        }\n        else {\n            switch (obj.type) {\n                case 'Basic':\n                    return BasicShape;\n                case 'Flow':\n                    return FlowShape;\n                case 'Path':\n                    return Path;\n                case 'Image':\n                    return Image;\n                case 'Text':\n                    return Text;\n                case 'Bpmn':\n                    return BpmnShape;\n                case 'Native':\n                    return Native;\n                case 'HTML':\n                    return Html;\n                case 'UmlActivity':\n                    return UmlActivityShape;\n                case 'UmlClassifier':\n                    return UmlClassifierShape;\n                case 'SwimLane':\n                    return SwimLane;\n                default:\n                    return BasicShape;\n            }\n        }\n    }\n    return (isBlazor()) ? DiagramShape : BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/* tslint:disable */\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar DiagramShape = /** @class */ (function (_super) {\n    __extends(DiagramShape, _super);\n    function DiagramShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    DiagramShape.prototype.getClassName = function () {\n        return 'DiagramShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], DiagramShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], DiagramShape.prototype, \"basicShape\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], DiagramShape.prototype, \"flowShape\", void 0);\n    __decorate([\n        Property('Event')\n    ], DiagramShape.prototype, \"bpmnShape\", void 0);\n    __decorate([\n        Property('Action')\n    ], DiagramShape.prototype, \"umlActivityShape\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"data\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"textContent\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], DiagramShape.prototype, \"scale\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShape.prototype, \"align\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], DiagramShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], DiagramShape.prototype, \"points\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], DiagramShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], DiagramShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], DiagramShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], DiagramShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], DiagramShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], DiagramShape.prototype, \"classifier\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], DiagramShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], DiagramShape.prototype, \"interfaceShape\", void 0);\n    return DiagramShape;\n}(ChildProperty));\nexport { DiagramShape };\n/* tslint:enable */\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = (isBlazor() ? this.shape.textContent : this.shape.content);\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if ((!isBlazor() && this.shape.shape === 'Rectangle') || (isBlazor() && this.shape.basicShape === 'Rectangle')) {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if ((!isBlazor() && this.shape.shape === 'Polygon') || (isBlazor() && this.shape.basicShape === 'Polygon')) {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape((isBlazor()) ? this.shape.basicShape : this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape((isBlazor() ? this.shape.flowShape : this.shape.shape));\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id, undefined, diagram.nodeTemplate);\n                if (this.shape.content) {\n                    htmlContent.content = this.shape.content;\n                }\n                else if (diagram.nodeTemplate) {\n                    htmlContent.isTemplate = true;\n                    htmlContent.template = htmlContent.content = getContent(htmlContent, true, this);\n                }\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if ((!isBlazor() && this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) ||\n            ((isBlazor()) && (this.shape.basicShape === 'Rectangle'\n                && this.shape.type === \"Basic\" && !this.shape.cornerRadius))) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if ((this.shape instanceof Text) || (isBlazor() && this.shape.type === \"Text\")) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || ((!isBlazor() && this.shape.shape === 'Message') || (isBlazor() && this.shape.bpmnShape === 'Message')) ||\n            ((!isBlazor() && this.shape.shape === 'DataSource') || (isBlazor() && this.shape.bpmnShape === 'DataSource'))) && ((this.shape.type !== 'UmlActivity' || ((!isBlazor() && this.shape.shape !== 'FinalNode') ||\n            (isBlazor() && this.shape.umlActivityShape !== 'FinalNode'))))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize, annotationTemplate) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i, annotationTemplate);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value, annotationTemplate) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            annotationcontent = getTemplateContent(annotationcontent, annotation, annotationTemplate);\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Complex({}, LayoutInfo)\n    ], Node.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], Node.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], Node.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner, getInterval, getSpaceValue } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        var canDraw;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            canDraw = true;\n            if (obj.disableConnectors && selectorItem.connectors.length > 0) {\n                canDraw = false;\n            }\n            if (obj.disableNodes && selectorItem.nodes.length > 0) {\n                canDraw = false;\n            }\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (canDraw) {\n                if (obj.content === '' && obj.source === '') {\n                    var data = obj.pathData ? obj.pathData : obj.content;\n                    var option = this.getBaseAttributes(wrapper);\n                    option.id = obj.name + '_userhandle';\n                    option.fill = obj.backgroundColor;\n                    option.stroke = obj.borderColor;\n                    option.strokeWidth = obj.borderWidth;\n                    option.centerX = newPoint.x;\n                    option.centerY = newPoint.y;\n                    option.radius = obj.size * 0.5;\n                    option.class = 'e-diagram-userhandle-circle';\n                    option.angle = 0;\n                    option.visible = obj.visible;\n                    option.opacity = 1;\n                    this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                    var pathPading = 5;\n                    var arrayCollection = [];\n                    arrayCollection = processPathData(data);\n                    arrayCollection = splitArrayCollection(arrayCollection);\n                    var pathSize = measurePath(data);\n                    //requiredSize/contentSize\n                    var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                    var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                    var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                    pathSize = measurePath(newData);\n                    var options = {\n                        x: newPoint.x - pathSize.width / 2,\n                        y: newPoint.y - pathSize.height / 2,\n                        angle: 0, id: '',\n                        class: 'e-diagram-userhandle-path',\n                        fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                        width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                    };\n                    this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n                }\n                else if (obj.content !== '') {\n                    var handleContent = void 0;\n                    handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                    handleContent.content = obj.content;\n                    handleContent.offsetX = newPoint.x;\n                    handleContent.offsetY = newPoint.y;\n                    handleContent.height = obj.size;\n                    handleContent.width = obj.size;\n                    handleContent.id = obj.name + '_shape';\n                    handleContent.horizontalAlignment = 'Center';\n                    handleContent.verticalAlignment = 'Center';\n                    handleContent.visible = obj.visible;\n                    handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                    handleContent.relativeMode = 'Object';\n                    handleContent.description = obj.name || 'User handle';\n                    handleContent.measure(new Size(obj.size, obj.size));\n                    handleContent.arrange(handleContent.desiredSize);\n                    this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n                }\n                else {\n                    var element_1 = new ImageElement();\n                    var options = this.getBaseAttributes(element_1, transform);\n                    options.width = obj.size;\n                    options.height = obj.size;\n                    options.x = newPoint.x - (obj.size / 2);\n                    options.y = newPoint.y - (obj.size / 2);\n                    options.sourceWidth = obj.size;\n                    options.sourceHeight = obj.size;\n                    options.alignment = element_1.imageAlign;\n                    options.source = obj.source;\n                    options.scale = element_1.imageScale;\n                    options.visible = obj.visible;\n                    options.description = obj.name || 'User handle';\n                    options.id = obj.name + '_';\n                    this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        var isLine = snapSettings.gridType === 'Lines';\n        var verticalLineIntervals = isLine ?\n            snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n        var horizontalLineIntervals = isLine ?\n            snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var i = 0; i < verticalLineIntervals.length; i = i + 1) {\n                hWidth += verticalLineIntervals[i];\n            }\n            for (var i = 0; i < horizontalLineIntervals.length; i = i + 1) {\n                hHeight += horizontalLineIntervals[i];\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight, isLine);\n            }\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                var spaceY = 0;\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                        'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(hLine, attr);\n                    pattern.appendChild(hLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, true);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderDotGrid = function (i, pattern, snapSettings, spacey, d, scale, isHorizontal) {\n        var intervals = !isHorizontal ?\n            snapSettings.horizontalGridlines.dotIntervals : snapSettings.verticalGridlines.dotIntervals;\n        intervals = getInterval(intervals, false);\n        var r;\n        var hLine;\n        var doubleRadius;\n        var dy;\n        var attr;\n        for (var j = 1; j < intervals.length; j = j + 2) {\n            r = j === intervals.length - 1 ? intervals[0] : intervals[j - 1];\n            hLine = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            dy = spacey;\n            dy = dy * scale;\n            attr = {\n                'cx': isHorizontal ? dy : d, 'cy': isHorizontal ? d : dy, 'fill': snapSettings.horizontalGridlines.lineColor, 'r': r\n            };\n            setAttributeSvg(hLine, attr);\n            pattern.appendChild(hLine);\n            spacey += intervals[j] + intervals[j - 1];\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth, isLine);\n            }\n            var spaceY = 0;\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                        'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(vLine, attr);\n                    pattern.appendChild(vLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, false);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            var isLine = snapSettings.gridType === 'Lines';\n            var verticalLineIntervals = isLine ?\n                snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n            var horizontalLineIntervals = isLine ?\n                snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (var j = 0; j < horizontalLineIntervals.length; j = j + 1) {\n                height += horizontalLineIntervals[j];\n            }\n            var width = 0;\n            for (var j = 0; j < verticalLineIntervals.length; j = j + 1) {\n                width += verticalLineIntervals[j];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth, isLine) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        var interval = isLine ? ruler.interval : ruler.interval + 1;\n        for (var i = 0; i < interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = isLine ? ((i === 0) ? 1.25 : 0.25) : 0;\n            }\n            else {\n                newInterval[i] = isLine ? (tickInterval - newInterval[i - 1]) : tickInterval;\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if ((element.style.textWrapping === 'Wrap' || element.style.textWrapping === 'WrapWithOverflow') &&\n            this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    (getHTMLLayer(this.diagramId).children[0]);\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        var domTable = 'domTable';\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                if (!window[domTable][this.diagramId + '_diagramLayer']) {\n                    window[domTable][this.diagramId + '_diagramLayer'] =\n                        this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                }\n                var diagramLayer = window[domTable][this.diagramId + '_diagramLayer'];\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            if (!window[domTable][this.diagramId + '_diagramPorts']) {\n                window[domTable][this.diagramId + '_diagramPorts'] = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            }\n            var portsLayer = window[domTable][this.diagramId + '_diagramPorts'];\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            if (!window[domTable][this.diagramId + '_diagramExpander']) {\n                window[domTable][this.diagramId + '_diagramExpander'] =\n                    this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            }\n            var expandLayer = window[domTable][this.diagramId + '_diagramExpander'];\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            if (!window[domTable][this.diagramId + '_nativeLayer']) {\n                window[domTable][this.diagramId + '_nativeLayer'] = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            }\n            var nativeLayer = window[domTable][this.diagramId + '_nativeLayer'];\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\nvar FitOptions = /** @class */ (function (_super) {\n    __extends(FitOptions, _super);\n    function FitOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Page')\n    ], FitOptions.prototype, \"mode\", void 0);\n    __decorate([\n        Property('PageSettings')\n    ], FitOptions.prototype, \"region\", void 0);\n    __decorate([\n        Complex({ top: 25, bottom: 25, left: 25, right: 25 }, Margin)\n    ], FitOptions.prototype, \"margin\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canZoomIn\", void 0);\n    __decorate([\n        Property(undefined)\n    ], FitOptions.prototype, \"customBounds\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canFit\", void 0);\n    return FitOptions;\n}(ChildProperty));\nexport { FitOptions };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    __decorate([\n        Complex({}, FitOptions)\n    ], PageSettings.prototype, \"fitOptions\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([1, 19, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5])\n    ], Gridlines.prototype, \"dotIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property('Lines')\n    ], SnapSettings.prototype, \"gridType\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { TextElement } from '../core/elements/text-element';\nimport { Node } from '../objects/node';\nimport { getIndex, cloneObject } from './base-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of commands\n */\n/* tslint:disable */\nvar DeepDiffMapper = /** @class */ (function () {\n    function DeepDiffMapper() {\n        this.valueCreated = 'created';\n        this.valueUpdated = \"updated\";\n        this.valueDeleted = \"deleted\";\n        this.valueUnchanged = \"unchanged\";\n        /** @private */\n        this.newNodeObject = [];\n        /** @private */\n        this.newConnectorObject = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /* tslint:enable */\n    }\n    /** @private */\n    DeepDiffMapper.prototype.updateObjectCollection = function (layers, diagram) {\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i]['objects']) {\n                layers[i]['objects'] = (diagram.layers[i].objects);\n            }\n            else {\n                layers[i]['objects'] = [];\n                layers[i]['objects'] = diagram.layers[i].objects;\n            }\n        }\n    };\n    /**   @private  */\n    DeepDiffMapper.prototype.getOldObject = function (id, isNode, diagram) {\n        var oldObject = isNode ? diagram.oldNodeObjects : diagram.oldConnectorObjects;\n        for (var i = 0; i < oldObject.length; i++) {\n            if (oldObject[i].id === id) {\n                return oldObject[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.changeSegments = function (diff, newObject) {\n        for (var _i = 0, _a = Object.keys(diff); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'segments') {\n                var seg = this.removeNullValues(newObject[prop]);\n                diff[prop] = seg;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.removeNullValues = function (segments) {\n        var newSegments = [];\n        var seg = {};\n        for (var i = 0; i < segments.length; i++) {\n            seg = this.removeNullObjectValues(segments[i]);\n            newSegments.push(seg);\n        }\n        return newSegments;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.removeNullObjectValues = function (segment) {\n        var newSegObject = {};\n        for (var _i = 0, _a = Object.keys(segment); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (segment[prop] !== undefined) {\n                newSegObject[prop] = (segment[prop] instanceof Object) ? this.removeNullObjectValues(segment[prop]) : segment[prop];\n            }\n        }\n        return newSegObject;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.getDifferenceValues = function (selectedObject, args, labelDrag, diagram) {\n        var diffValue;\n        var diff;\n        var result;\n        var isNode = selectedObject instanceof Node;\n        var oldObject;\n        if (selectedObject) {\n            oldObject = isNode ? this.getOldObject(selectedObject.id, true, diagram) : this.getOldObject(selectedObject.id, false, diagram);\n            if (oldObject) {\n                var newObject = cloneObject(selectedObject);\n                result = this.map(newObject, oldObject);\n                diffValue = this.frameObject({}, result);\n                diff = this.removeEmptyValues(diffValue);\n                diff = this.changeSegments(diff, newObject);\n                if (diff.children) {\n                    diff.children = cloneObject(selectedObject).children;\n                }\n                return this.getDiagramObjects(diff, selectedObject.id, isNode, args, labelDrag, diagram);\n            }\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getLayerObject = function (oldDiagram, temp, diagram) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers['layers'] = [];\n            var newDiagram = {};\n            newDiagram['layers'] = [];\n            for (var i = 0; i < diagram.layers.length; i++) {\n                newDiagram['layers'].push(cloneObject(diagram.layers[i]));\n            }\n            var result = void 0;\n            for (var i = 0; i < newDiagram['layers'].length; i++) {\n                if (!temp) {\n                    result = this.map(cloneObject(newDiagram['layers'][i]), oldDiagram['layers'][i]);\n                }\n                else {\n                    result = this.map(oldDiagram['layers'][i], cloneObject(newDiagram['layers'][i]));\n                }\n                var diffValue = this.frameObject({}, result);\n                var diff = this.removeEmptyValues(diffValue);\n                diffLayers['layers'][i] = diff;\n            }\n            this.updateObjectCollection(diffLayers['layers'], diagram);\n            return diffLayers;\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getDiagramObjects = function (diffValue, object, isNode, args, labelDrag, diagram) {\n        var index = 0;\n        index = getIndex(diagram, object);\n        diffValue.ejsIndex = index;\n        if (isNode) {\n            this.newNodeObject.push(diffValue);\n        }\n        else {\n            this.newConnectorObject.push(diffValue);\n        }\n        if (args && (((args.sourceWrapper instanceof TextElement) && labelDrag) || args.portId)) {\n            var tempObject = void 0;\n            var objectValue = void 0;\n            if (isNode) {\n                objectValue = args.portId ? this.newNodeObject[0].ports : this.newNodeObject[0].annotations;\n            }\n            else {\n                objectValue = this.newConnectorObject[0].annotations || [];\n            }\n            for (var i = 0; i < objectValue.length; i++) {\n                if (Object.keys(objectValue[i]).length > 0) {\n                    var selectedObject = diagram.nameTable[object];\n                    tempObject = objectValue[i];\n                    if (args.portId) {\n                        this.newNodeObject[0].ports = [tempObject];\n                    }\n                    else {\n                        for (var j = 0; j < selectedObject.annotations.length; j++) {\n                            if (args.sourceWrapper.id === selectedObject.id + \"_\" + selectedObject.annotations[j].id) {\n                                tempObject.ejsIndex = j;\n                            }\n                        }\n                        if (isNode) {\n                            this.newNodeObject[0].annotations = [tempObject];\n                        }\n                        else {\n                            this.newConnectorObject[0].annotations = [tempObject];\n                        }\n                    }\n                }\n            }\n        }\n        this.diagramObject = { nodes: this.newNodeObject, connectors: this.newConnectorObject };\n        //return returnValue;\n    };\n    DeepDiffMapper.prototype.removeArrayValues = function (obj) {\n        var newObj = [];\n        var value = JSON.stringify(obj);\n        if (!(value === JSON.stringify({ 'data': [] }))) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj[i] instanceof Object) {\n                    var newValue = this.removeEmptyValues(obj[i]);\n                    newObj.push(newValue);\n                }\n                else {\n                    newObj.push(obj[i]);\n                }\n            }\n        }\n        return newObj;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.removeEmptyValues = function (frame) {\n        var newObj = {};\n        for (var _i = 0, _a = Object.keys(frame); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop !== 'wrapper' && prop !== 'data') {\n                var obj = frame[prop];\n                var value = JSON.stringify(obj);\n                if (obj instanceof Array) {\n                    var newValue = this.removeArrayValues(obj);\n                    if (JSON.stringify(newValue) !== '[]') {\n                        newObj[prop] = newValue;\n                    }\n                }\n                else {\n                    if (obj instanceof Object) {\n                        if (!(value === JSON.stringify({ 'data': [] }))) {\n                            var newValue = this.removeEmptyValues(obj);\n                            if (JSON.stringify(newValue) !== '{}') {\n                                newObj[prop] = newValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (!(value === JSON.stringify(['data']) || value === JSON.stringify('data')\n                            || value === JSON.stringify({ 'data': [] }))) {\n                            if (prop !== 'version' && prop !== 'ejsAction') {\n                                newObj[prop] = frame[prop];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return newObj;\n    };\n    DeepDiffMapper.prototype.map = function (obj1, obj2, arrayName) {\n        if (this.isFunction(obj1) || this.isFunction(obj2)) {\n            throw 'Invalid argument. Function given, object expected.';\n        }\n        if (this.isValue(obj1) || this.isValue(obj2)) {\n            return {\n                type: this.compareValues(obj1, obj2),\n                data: obj1 === undefined ? obj2 : obj1\n            };\n        }\n        var diff = {};\n        if (this.isArray(obj1)) {\n            for (var i = 0; i < obj1.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                var ss = this.map(obj1[i], obj2[i]);\n                diff[arrayName].push(ss);\n            }\n        }\n        else {\n            for (var key in obj1) {\n                if (this.isFunction(obj1[key])) {\n                    continue;\n                }\n                var value2 = undefined;\n                if (obj2[key] !== undefined) {\n                    value2 = obj2[key];\n                }\n                var kk = this.map(obj1[key], value2, this.isArray(value2) ? key : undefined);\n                if (this.isArray(value2)) {\n                    diff[key] = kk[key];\n                }\n                else {\n                    diff[key] = kk;\n                }\n            }\n        }\n        if (this.isArray(obj2)) {\n            for (var i = 0; i < obj2.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                if (this.isFunction(obj2[i]) || diff[arrayName][i] !== undefined) {\n                    if (diff[arrayName][i].type && diff[arrayName][i].type !== this.valueUpdated) {\n                        delete diff[arrayName];\n                    }\n                    continue;\n                }\n                var ss = this.map(undefined, obj2[i]);\n                diff[arrayName][i] = ss;\n            }\n        }\n        else {\n            for (var key in obj2) {\n                if (this.isFunction(obj2[key]) || diff[key] !== undefined) {\n                    if (diff[key].type && diff[key].type !== this.valueUpdated) {\n                        delete diff[key];\n                    }\n                    continue;\n                }\n                var kk = this.map(undefined, obj2[key]);\n                diff[key] = kk;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.compareValues = function (value1, value2) {\n        if (value1 === value2) {\n            return this.valueUnchanged;\n        }\n        if (this.isDate(value1) && this.isDate(value2) && value1.getTime() === value2.getTime()) {\n            return this.valueUnchanged;\n        }\n        if (value1 === undefined) {\n            return this.valueCreated;\n        }\n        if (value2 === undefined) {\n            return this.valueDeleted;\n        }\n        return this.valueUpdated;\n    };\n    DeepDiffMapper.prototype.isFunction = function (x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    DeepDiffMapper.prototype.isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n    };\n    DeepDiffMapper.prototype.isDate = function (x) {\n        return Object.prototype.toString.call(x) === '[object Date]';\n    };\n    DeepDiffMapper.prototype.isObject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n    DeepDiffMapper.prototype.isValue = function (x) {\n        return !this.isObject(x) && !this.isArray(x);\n    };\n    DeepDiffMapper.prototype.frameObject = function (final, obj) {\n        for (var key in obj) {\n            if (this.isArray(obj[key])) {\n                if (!final[key]) {\n                    final[key] = [];\n                }\n                for (var i = 0; i < obj[key].length; i++) {\n                    var kk = this.frameObject({}, obj[key][i]);\n                    final[key].push(kk);\n                }\n            }\n            else {\n                if (key != 'type') {\n                    if (this.isFunction(obj[key])) {\n                        continue;\n                    }\n                    if (this.isValue(obj[key])) {\n                        return obj['data'];\n                    }\n                    else {\n                        var kk = this.frameObject({}, obj[key]);\n                        if (this.isValue(kk) || Object.keys(kk).length > 0) {\n                            final[key] = kk;\n                        }\n                    }\n                }\n            }\n        }\n        return final;\n    };\n    return DeepDiffMapper;\n}());\nexport { DeepDiffMapper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                            this.commandHandler.updateBlazorSelector();\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, trigger, temparg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && args && args.source)) return [3 /*break*/, 2];\n                        selectorModel = args.source;\n                        if (!selectorModel.connectors) return [3 /*break*/, 2];\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, arg)];\n                    case 1:\n                        temparg = (_a.sent());\n                        this.tempArgs = temparg;\n                        if (arg.cancel || (temparg && temparg.cancel)) {\n                            this.canCancel = true;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.inAction = true;\n                        this.undoElement = undefined;\n                        if (!(this instanceof ConnectorDrawingTool)) {\n                            this.undoElement = cloneObject(args.source);\n                        }\n                        _super.prototype.mouseDown.call(this, args);\n                        if (args.source && args.source.connectors) {\n                            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                            connectors = args.source.connectors[0];\n                            this.oldConnector = cloneObject(connectors);\n                        }\n                        // Sets the selected segment \n                        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                            for (i = 0; i < connectors.segments.length; i++) {\n                                segment = connectors.segments[i];\n                                segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                                segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                                    this.selectedSegment = segment;\n                                }\n                            }\n                        }\n                        this.currentPosition = args.position;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, this.tempArgs)];\n                    case 1:\n                        temparg = (_a.sent());\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (this.isConnected) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = {\n                                    x: this.prevPosition.x, y: this.prevPosition.y\n                                };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 2];\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg)];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 7];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 6];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 3:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 5;\n                    case 5:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container) {\n                                    isEndGroup = true;\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 6;\n                    case 6:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 8;\n                    case 8:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var object_2, oldValue, newValue, arg, args1, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg)];\n                    case 1:\n                        args1 = _a.sent();\n                        if (args1 && args1.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor())\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var obj, oldValues, arg, blazarArgs, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            source: cloneBlazorObject(args.source), state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg)];\n                    case 1:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel) {\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n                            deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                            oldValue = {\n                                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                            };\n                            arg = {\n                                source: cloneBlazorObject(args.source), state: 'Completed',\n                                oldValue: oldValue, newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor()) {\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /** @private */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if ((args.target || (args.actualObject && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction, DiagramConstraints } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if ((currentAction === this.diagram.selectedItems.userHandles[i].name) ||\n                    (eventName === DiagramEvent.onUserHandleMouseUp && currentAction === 'Select')) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    if (eventName === DiagramEvent.onUserHandleMouseDown) {\n                        this.userHandleObject = this.diagram.selectedItems.userHandles[i].name;\n                    }\n                    var element = document.getElementById(this.diagram.selectedItems.userHandles[i].name + '_userhandle');\n                    if (eventName === DiagramEvent.onUserHandleMouseUp) {\n                        if (element && element.id === this.userHandleObject + '_userhandle') {\n                            this.diagram.triggerEvent(eventName, arg);\n                        }\n                    }\n                    else {\n                        this.diagram.triggerEvent(eventName, arg);\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.diagram.selectedItems);\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        if (this.eventArgs.source instanceof Node) {\n            arg.element.selector.nodes = [];\n            arg.element.selector.nodes.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        else if (this.eventArgs.source instanceof Connector) {\n            arg.element.selector.connectors = [];\n            arg.element.selector.connectors.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        this.diagram.blazorActions = BlazorAction.interaction;\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n        this.diagram.blazorActions = this.diagram.blazorActions & ~BlazorAction.interaction;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (isBlazor() || (canExecute &&\n                                canExecute({\n                                    'keyDownEventArgs': KeyboardEvent,\n                                    parameter: command.parameter\n                                }))) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg;\n        if (!isBlazor()) {\n            arg = {\n                targets: cloneBlazorObject(target),\n                element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n                actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n            };\n        }\n        if (isBlazor() && (this.diagram.mouseEnter || this.diagram.mouseOver)) {\n            arg.actualObject = getObjectType(this.eventArgs.actualObject) === Connector ? {\n                connector: cloneBlazorObject(this.eventArgs.actualObject)\n            }\n                : {\n                    node: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && this.diagram.mouseLeave\n            && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                var selector = void 0;\n                if (obj instanceof Node) {\n                    selector = { nodes: [cloneBlazorObject(obj)] };\n                }\n                else if (obj instanceof Connector) {\n                    selector = { connectors: [cloneBlazorObject(obj)] };\n                }\n                else {\n                    selector = cloneBlazorObject(obj);\n                }\n                arg = {\n                    source: obj ? { selector: selector } : { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var basicShape = 'basicShape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && (this.diagram.drawingObject.shape[shape] === 'Polygon' ||\n                    (isBlazor() && this.diagram.drawingObject.shape[basicShape] === 'Polygon')) &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!(this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting))) {\n                        if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                            if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                                var swimlane = this.diagram.getObject(parentNode.parentId);\n                                var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                                var firstlane = this.diagram.getObject(laneId);\n                                var x = firstlane.wrapper.bounds.x;\n                                var y = firstlane.wrapper.bounds.y;\n                                var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                                var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                                var swimlaneBounds = new Rect(x, y, width, height);\n                                if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                    obj.offsetX = helperObject.offsetX;\n                                    obj.offsetY = helperObject.offsetY;\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                    obj.rotateAngle = helperObject.rotateAngle;\n                                }\n                            }\n                            else {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                    if (obj.shape.type !== 'Bpmn' ||\n                                        (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                        obj.width = helperObject.width;\n                                        obj.height = helperObject.height;\n                                    }\n                                }\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        var objj1 = objects[i - 1];\n                        if (objects[i - 1] instanceof Node && objj1.ports) {\n                            var portElement = this.findTargetElement(objj1.wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objj1;\n                            }\n                            for (var j = 0; j < objj1.ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objj1.ports[j].id + '$')) {\n                                    if (canDraw(objj1.ports[j], diagram)) {\n                                        return objj1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node || objects[i] instanceof Connector) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction, getIndex } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        // private newNodeObject: Object[] = [];\n        // private newConnectorObject: Object[] = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /**   @private  */\n        this.newSelectedObjects = {};\n        /**   @private  */\n        this.oldSelectedObjects = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /**   @private  */\n        this.deepDiffer = new DeepDiffMapper();\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorValue = function (args) {\n        if (args.cancel) {\n            var newChanges = {};\n            var oldChanges = {};\n            var connector = this.diagram.nameTable[args.connector.id];\n            var nodeEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            var portEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            var connectionEnd = args.connectorEnd === 'ConnectorTargetEnd';\n            var newValue = connectionEnd ? args.newValue.connectorTargetValue : args.newValue.connectorSourceValue;\n            var oldValue = connectionEnd ? args.oldValue.connectorTargetValue : args.oldValue.connectorSourceValue;\n            oldChanges[nodeEndId] = newValue.nodeId;\n            oldChanges[portEndId] = newValue.portId;\n            newChanges[nodeEndId] = oldValue.nodeId;\n            newChanges[portEndId] = oldValue.portId;\n            if (args.cancel && args.connectorEnd !== 'ConnectorTargetEnd') {\n                connector.sourceID = oldValue.nodeId;\n                if (args.connector.sourcePortID) {\n                    connector.sourcePortID = oldValue.portId;\n                }\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n            if (args.cancel && args.connectorEnd === 'ConnectorTargetEnd') {\n                if (args.connector.targetPortID) {\n                    connector.targetPortID = oldValue.portId;\n                }\n                connector.targetID = oldValue.nodeId;\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var temparg;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n                            event === DiagramEvent.connectionChange) {\n                            if (this.diagram.currentSymbol) {\n                                return [2 /*return*/];\n                            }\n                            if (event === DiagramEvent.drop) {\n                                args.source = this.diagram;\n                            }\n                            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        return [4 /*yield*/, this.diagram.triggerEvent(event, args)];\n                    case 1:\n                        temparg = _a.sent();\n                        return [2 /*return*/, temparg];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var oldChanges = {};\n        var newChanges = {};\n        var returnargs;\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    returnargs = arg;\n                }\n                if (!checkBlazor) {\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                        returnargs = arg;\n                    }\n                    if (!checkBlazor) {\n                        this.triggerEvent(DiagramEvent.connectionChange, arg);\n                    }\n                }\n            }\n        }\n        return returnargs;\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var connectedNode;\n        if (this.enableCloneObject) {\n            connectedNode = this.diagram.nameTable[newChanges[nodeEndId]];\n            var nodeObject = cloneObject(connectedNode);\n            this.diagram.insertValue(nodeObject, true);\n        }\n        var returnargs;\n        var arg = {\n            cancel: false, state: 'Changing', connectorEnd: endPoint,\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: undefined, newValue: undefined\n            };\n            if (endPoint === 'ConnectorSourceEnd') {\n                arg.oldValue = {\n                    connectorSourceValue: {\n                        portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId]\n                    }\n                };\n                arg.newValue = {\n                    connectorSourceValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId], }\n                };\n            }\n            else {\n                arg.oldValue = {\n                    connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] }\n                };\n                arg.newValue = {\n                    connectorTargetValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n                };\n            }\n            returnargs = arg;\n        }\n        if (!checkBlazor) {\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n        if (arg.cancel || (isBlazor() && canCancel)) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.oldValue = {\n                        connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId], }\n                    };\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n        }\n        if (this.enableCloneObject) {\n            if (connectedNode === undefined) {\n                connectedNode = this.diagram.nameTable[oldChanges[nodeEndId]];\n                var nodeObject = cloneObject(connectedNode);\n                this.diagram.insertValue(nodeObject, true);\n            }\n        }\n        return returnargs;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && ((!isBlazor() && argsTarget.shape.shape === 'Activity') ||\n                (isBlazor() && argsTarget.shape.bpmnShape === 'Activity'))) {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                ((!isBlazor() && args.target.shape.shape !== 'TextAnnotation') ||\n                    (isBlazor() && args.target.shape.bpmnShape !== 'TextAnnotation'))) {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args, canCancel) {\n        var checkBlazor;\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        var returnargs;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget((args.targetWrapper || args.sourceWrapper), (args.target || args.actualObject), endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = (args.target && args.target.id || args.actualObject.id);\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n            if (!checkBlazor) {\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n            if (arg.cancel || (isBlazor() && canCancel)) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: undefined,\n                        connector: cloneBlazorObject(connector),\n                        oldValue: undefined,\n                        cancel: false, state: 'Changing', connectorEnd: endPoint,\n                    };\n                    if (endPoint === 'ConnectorSourceEnd') {\n                        arg.oldValue = {\n                            connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                    else {\n                        arg.oldValue = {\n                            connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                }\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n        return returnargs;\n    };\n    /* tslint:enable */\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    CommandHandler.prototype.UpdateBlazorDiagramModelLayers = function (layer) {\n        var ejsInterop = 'ejsInterop';\n        var updatedModel = cloneBlazorObject(layer);\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = { 'methodName': 'UpdateBlazorDiagramModelLayers', 'diagramobj': JSON.stringify(updatedModel) };\n            window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        this.diagram.enableServerDataBinding(false);\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        this.diagram.enableServerDataBinding(true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.UpdateBlazorDiagramModelLayers(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var lane = findLane(node, this.diagram);\n                    childTable[node.id] = cloneObject(lane);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0\n                    && (!isBlazor() || isBlazor() && node.annotations[0].content !== '')) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                var copiedObject = [];\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = true;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        copiedObject.push(newObj);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        copiedObject.push(newNode);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = false;\n                    this.diagram.UpdateBlazorDiagramModelCollection(copiedItems[0], copiedObject);\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n            (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var oldProtectPropertyChangeValue;\n        if (isBlazor()) {\n            oldProtectPropertyChangeValue = this.diagram.getProtectPropertyChangeValue();\n            this.diagram.protectPropertyChange(true);\n        }\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        if (isBlazor()) {\n            this.diagram.protectPropertyChange(oldProtectPropertyChangeValue);\n        }\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: arg.state, type: arg.type, cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(this.getSelectedObject(), arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        this.diagram.enableServerDataBinding(false);\n        var select = true;\n        if (!isBlazor()) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                if (newObj) {\n                    select = true;\n                    if (!hasSelection(this.diagram)) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                    else {\n                        if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                            for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                if (parentNode) {\n                                    parentNode = this.findParent(parentNode);\n                                    if (parentNode) {\n                                        if (newObj.id === parentNode.id) {\n                                            this.selectGroup(newObj);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        this.selectProcesses(newObj);\n                        select = this.selectBpmnSubProcesses(newObj);\n                        if (select) {\n                            this.select(newObj, i > 0 || multipleSelection, true);\n                        }\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n            this.updateBlazorSelectorModel(oldValue);\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateBlazorSelector = function () {\n        if (isBlazor()) {\n            this.newSelectedObjects = cloneObject(this.diagram.selectedItems);\n            var result = this.deepDiffer.map(cloneObject(this.newSelectedObjects), this.oldSelectedObjects);\n            var diffValue = this.deepDiffer.frameObject({}, result);\n            var diff = this.deepDiffer.removeEmptyValues(diffValue);\n            diff.nodes = [];\n            for (var i = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n                diff.nodes.push(this.diagram.selectedItems.nodes[i].id);\n            }\n            diff.connectors = [];\n            for (var i = 0; i < this.diagram.selectedItems.connectors.length; i++) {\n                diff.connectors.push(this.diagram.selectedItems.connectors[i].id);\n            }\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': { selectedItems: diff } };\n                window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        this.diagram.enableServerDataBinding(false);\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (!isBlazor()) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    if (!(node.children && node.children.length > 0)) {\n                        this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                        this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    }\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateBlazorProperties = function (isObjectInteraction) {\n        var ejsInterop = 'ejsInterop';\n        var blazor = 'Blazor';\n        if (!isObjectInteraction) {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        else {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.deepDiffer.diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n        this.deepDiffer.newNodeObject = [];\n        this.deepDiffer.newConnectorObject = [];\n        this.diagramObject = [];\n        this.diagram.oldNodeObjects = [];\n        this.diagram.oldConnectorObjects = [];\n    };\n    /**   @private  */\n    CommandHandler.prototype.enableCloneObject = function (value) {\n        this.diagram.canEnableBlazorObject = value;\n    };\n    /**   @private  */\n    CommandHandler.prototype.ismouseEvents = function (value) {\n        if (value) {\n            this.diagram.blazorActions = BlazorAction.interaction;\n        }\n        else {\n            this.diagram.blazorActions = ~BlazorAction.interaction;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateLayerObject = function (oldDiagram, temp) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers = this.deepDiffer.getLayerObject(oldDiagram, temp, this.diagram);\n            this.diagramObject = diffLayers;\n            this.updateBlazorProperties();\n        }\n    };\n    /* tslint:enable:no-string-literal */\n    /** @private */\n    CommandHandler.prototype.getDiagramOldValues = function (oldDiagram, attribute) {\n        var newDiagram = {};\n        for (var i = 0; i < attribute.length; i++) {\n            newDiagram[attribute[i]] = cloneObject(this.diagram[attribute[i]]);\n        }\n        var newObject = cloneObject(newDiagram);\n        var result = this.deepDiffer.map(newObject, oldDiagram);\n        var diffValue = this.deepDiffer.frameObject({}, result);\n        var diff = this.deepDiffer.removeEmptyValues(diffValue);\n        diff = this.deepDiffer.changeSegments(diff, newObject);\n        this.diagramObject = diff;\n        this.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    /** @private */\n    CommandHandler.prototype.getBlazorOldValues = function (args, labelDrag) {\n        if (isBlazor()) {\n            var oldNodeObject = this.diagram.oldNodeObjects;\n            for (var i = 0; i < oldNodeObject.length; i++) {\n                if (oldNodeObject[i].id) {\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldNodeObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            var oldConnectorObject = this.diagram.oldConnectorObjects;\n            for (var i = 0; i < oldConnectorObject.length; i++) {\n                if (oldConnectorObject[i].id) {\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldConnectorObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            if (oldNodeObject.length > 0 || oldConnectorObject.length > 0) {\n                this.updateBlazorProperties(true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectChanges = function (previousObject, currentObject, changedNodes) {\n        for (var i = 0; i < previousObject.length; i++) {\n            var value = this.deepDiffer.map(currentObject[i], previousObject[i]);\n            var result = this.deepDiffer.frameObject({}, value);\n            var change = this.deepDiffer.removeEmptyValues(result);\n            if (change.children) {\n                change.children = cloneObject(currentObject[i]).children;\n            }\n            change = this.deepDiffer.changeSegments(change, currentObject[i]);\n            change.ejsIndex = getIndex(this.diagram, currentObject[i].id);\n            changedNodes.push(change);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        this.diagram.enableServerDataBinding(false);\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (!isBlazor()) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n                else {\n                    this.oldSelectedObjects = cloneObject(selectormodel);\n                }\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n            this.updateBlazorSelector();\n            this.diagram.enableServerDataBinding(true);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    if (!(checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.isGroupDragging;\n                    }\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.isGroupDragging;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, (actualObject.parentId &&\n                                    (this.diagram.diagramActions & DiagramAction.isGroupDragging)) ? false : true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotatePropertyChnage = function (angle) {\n        var selectedItems = this.diagram.selectedItems;\n        var objects = [];\n        objects = objects.concat(selectedItems.nodes);\n        objects = objects.concat(selectedItems.connectors);\n        var pivotValue = { x: selectedItems.offsetX, y: selectedItems.offsetY };\n        this.rotateObjects(selectedItems, objects, angle - selectedItems.rotateAngle, pivotValue);\n        selectedItems.wrapper.rotateAngle = selectedItems.rotateAngle = angle;\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | (DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~(DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.blazorActions = BlazorAction.expandNode;\n        objects = this.diagram.doLayout();\n        this.diagram.blazorActions = BlazorAction.Default;\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var previousNodeObject = [];\n            var previousConnectorObject = [];\n            var updateNodeObject = [];\n            var updateConnectorObject = [];\n            var changeNodes = [];\n            var changeConnectors = [];\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    if (isBlazor()) {\n                        previousNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                    }\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    if (isBlazor()) {\n                        updateNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                    }\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    if (isBlazor()) {\n                        previousConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                    if (isBlazor()) {\n                        updateConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                }\n            }\n            this.updateSelector();\n            if (isBlazor()) {\n                this.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n                this.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var ejsInterop = 'ejsInterop';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n                if (window && window[blazor] && (changeConnectors.length + changeNodes.length)) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[ejsInterop].updateBlazorProperties(obj, this.diagram);\n                }\n            }\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation'))) {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { BlazorAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes, canMeasureDecoratorPath } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.isServerUpdate = false;\n        /** @private */\n        _this.oldNodeObjects = [];\n        /** @private */\n        _this.oldDiagramObject = {};\n        /** @private */\n        _this.oldConnectorObjects = [];\n        /** @private */\n        _this.canEnableBlazorObject = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.callBlazorModel = true;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.changedConnectorCollection = [];\n        _this.changedNodesCollection = [];\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        _this.ignoreCollectionWatch = true;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n            _this.updateAnnotationText(node.annotations);\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n                _this.updateAnnotationText(node.annotations);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n            if (isBlazor()) {\n                var defaultPropChanges = cloneObject(_this.bulkChanges);\n                _this.enableServerDataBinding(true);\n                _this.protectPropertyChange(true);\n                var keys = Object.keys(defaultPropChanges);\n                for (var i_1 = 0; i_1 < keys.length; i_1++) {\n                    var key = keys[i_1];\n                    var split = key.split('-');\n                    if (split && split[0]) {\n                        if (split[0] === 'nodes') {\n                            defaultPropChanges[key].ejsIndex = Number(split[1]);\n                            _this.changedNodesCollection.push(defaultPropChanges[key]);\n                        }\n                        if (split[0] === 'connectors') {\n                            defaultPropChanges[key].ejsIndex = Number(split[1]);\n                            _this.changedConnectorCollection.push(defaultPropChanges[key]);\n                        }\n                    }\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.updateAnnotationText = function (annotations) {\n        if (isBlazor() && annotations.length > 0) {\n            for (var i = 0; annotations && i < annotations.length; i++) {\n                var label = annotations[i];\n                label.content = label.content.split('\\\\n').join('\\n');\n            }\n        }\n    };\n    Diagram.prototype.callFromServer = function (arg) {\n        var methodName = 'methodName';\n        var mId = 'id';\n        if (arg[methodName] === 'getParentID') {\n            var id = arg[mId];\n            return this.nameTable[id].parentId;\n        }\n        else if (arg[methodName] === 'getEdges') {\n            var outEdge = 'outEdge';\n            var isOutEdge = arg[outEdge];\n            var id = arg[mId];\n            if (isOutEdge) {\n                return this.nameTable[id].outEdges;\n            }\n            else {\n                return this.nameTable[id].inEdges;\n            }\n        }\n        else if (arg[methodName] === 'updateDiagramObjects') {\n            var obj = 'obj';\n            var isAdding = 'IsAdding';\n            var args = arg[obj];\n            this.isServerUpdate = true;\n            if (arg[isAdding]) {\n                var add = 'add';\n                this[add].apply(this, args);\n            }\n            else {\n                var remove_1 = 'remove';\n                this[remove_1].apply(this, args);\n            }\n            this.isServerUpdate = false;\n        }\n        else if (arg[methodName] === 'invokeLoadDiagramMethod') {\n            var data = 'data';\n            this.loadDiagram(arg[data]);\n        }\n    };\n    ;\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        if (this.diagramActions & DiagramAction.Render) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'width':\n                    case 'height':\n                        this.element.style.width = this.getSizeValue(this.width);\n                        this.element.style.height = this.getSizeValue(this.height);\n                        this.eventHandler.updateViewPortSize(this.element);\n                        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                            var view = _c[_b];\n                            var temp = this.views[view];\n                            if (!(temp instanceof Diagram)) {\n                                temp.updateView(temp);\n                            }\n                        }\n                        break;\n                    case 'nodes':\n                        if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                            this.clearCollection();\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                                var key = _e[_d];\n                                var index = Number(key);\n                                var actualObject = this.nodes[index];\n                                var changedProp = newProp.nodes[index];\n                                refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                                this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                    newValue: cloneBlazorObject(newProp.nodes[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { node: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                    args.newValue = { node: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'connectors':\n                        var oldObject = void 0;\n                        if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                            this.clearCollection(true);\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                var index = Number(key);\n                                var actualObject = this.connectors[index];\n                                var changedProp = newProp.connectors[index];\n                                this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                    newValue: cloneBlazorObject(newProp.connectors[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { connector: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                    args.newValue = { connector: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                    this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                                }\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            this.updateBridging();\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'bridgeDirection':\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                        break;\n                    case 'backgroundColor':\n                        this.intOffPageBackground();\n                        break;\n                    case 'pageSettings':\n                        this.validatePageSize();\n                        this.updatePage();\n                        break;\n                    case 'selectedItems':\n                        if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                            if (this.selectedItems.userHandles.length > 0) {\n                                this.renderSelector(true);\n                                break;\n                            }\n                        }\n                        if (newProp.selectedItems.constraints) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                        break;\n                    case 'snapSettings':\n                        this.updateSnapSettings(newProp);\n                        break;\n                    case 'commandManager':\n                        this.initCommands();\n                        break;\n                    case 'layout':\n                        refreshLayout = true;\n                        break;\n                    case 'dataSourceSettings':\n                        this.clear();\n                        this.initObjects();\n                        if (this.layout.type === 'None') {\n                            refereshColelction = true;\n                        }\n                        else {\n                            refreshLayout = true;\n                        }\n                        break;\n                    case 'tooltip':\n                        initTooltip(this);\n                        break;\n                    case 'rulerSettings':\n                        this.updateRulerSettings(newProp);\n                        break;\n                    case 'layers':\n                        this.updateLayer(newProp);\n                        break;\n                    case 'scrollSettings':\n                        this.updateScrollSettings(newProp);\n                        break;\n                    case 'locale':\n                        this.realActions |= RealAction.PreventDataInit;\n                        _super.prototype.refresh.call(this);\n                        this.realActions &= ~RealAction.PreventDataInit;\n                        break;\n                    case 'contextMenuSettings':\n                        if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                            this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                        }\n                        if (newProp.contextMenuSettings.show !== undefined) {\n                            this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                        }\n                        if (newProp.contextMenuSettings.items) {\n                            var items = newProp.contextMenuSettings.items;\n                            for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                                var key = _j[_h];\n                                var index = Number(key);\n                                this.contextMenuSettings.items[index] = items[index];\n                            }\n                        }\n                        break;\n                    case 'serializationSettings':\n                        if (newProp.serializationSettings.preventDefaults !== undefined) {\n                            this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                        }\n                        break;\n                }\n            }\n            if (refreshLayout) {\n                this.doLayout();\n            }\n            if (isPropertyChanged && this.propertyChange) {\n                var args = {\n                    element: cloneBlazorObject(this), cause: this.diagramActions,\n                    oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n                };\n                if (isBlazor()) {\n                    args.element = { diagram: cloneBlazorObject(this) };\n                    args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                    args.newValue = { diagram: cloneBlazorObject(newValue) };\n                }\n                this.triggerEvent(DiagramEvent.propertyChange, args);\n            }\n            if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n                var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n                this.addHistoryEntry(entry);\n            }\n            this.resetDiagramActions();\n            if (refereshColelction) {\n                this.initObjects(true);\n                this.refreshDiagramLayer();\n            }\n            if (!refereshColelction) {\n                for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                    var temp = _l[_k];\n                    var view = this.views[temp];\n                    if (!(view instanceof Diagram)) {\n                        if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                            view.updateHtmlLayer(view);\n                        }\n                        this.refreshCanvasDiagramLayer(view);\n                    }\n                }\n            }\n            this.resetTemplate();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines || newProp.snapSettings.gridType) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'chart_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.ignoreCollectionWatch = true;\n        var domTable = 'domTable';\n        window[domTable] = {};\n        var collapsedNode = [];\n        if (isBlazor()) {\n            var changedNodes = [];\n            var changedConnectors = [];\n            for (var i = 0; i < this.changedNodesCollection.length; i++) {\n                changedNodes.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedNodesCollection[i]));\n            }\n            for (var i = 0; i < this.changedConnectorCollection.length; i++) {\n                changedConnectors.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedConnectorCollection[i]));\n            }\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changedNodes, connectors: changedConnectors };\n            if (window && window[blazor] && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this);\n            }\n        }\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            var previousConnectorObject = [];\n            var updateConnectorObject = [];\n            var changeConnectors = [];\n            if (isBlazor()) {\n                for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n            }\n            this.lineRoutingModule.lineRouting(this);\n            if (isBlazor()) {\n                for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                    var obj = _c[_b];\n                    updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n                this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var ejsInterop = 'ejsInterop';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: [], connectors: changeConnectors };\n                if (window && window[blazor]) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[ejsInterop].updateBlazorProperties(obj, this);\n                }\n            }\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        this.renderComplete();\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateFitToPage = function () {\n        if (this.pageSettings && this.pageSettings.fitOptions && this.pageSettings.fitOptions.canFit) {\n            this.fitToPage(this.pageSettings.fitOptions);\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate('diagramsf_node_template', 'NodeTemplate', this, false);\n            }\n            else if (annotation && annotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate('diagramsf_node_template', 'NodeTemplate');\n            }\n            else if (templateAnnotation && templateAnnotation.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n    };\n    //Call back function to the node template\n    // private measureNode(node: NodeModel): void {\n    //     if (node.shape.type === 'Native' && isBlazor()) {\n    //         node.wrapper.measure(new Size(node.width, node.height));\n    //         node.wrapper.arrange(node.wrapper.desiredSize);\n    //     }\n    // }\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: [this]\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n        var domTable = 'domTable';\n        window[domTable] = {};\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n            this.commandHandler.updateBlazorSelector();\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.eventHandler.updateViewPortSize(this.element);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     * @blazorArgsType process|DiagramNode\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     * @deprecated\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.fitToPage(options);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringIntoView(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringToCenter(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.group();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.unGroup();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendToBack();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     * @blazorArgsType layer|DiagramLayer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        var oldValues = cloneObject(this.layers);\n        this.enableServerDataBinding(false);\n        this.commandHandler.moveObjects(objects, targetLayer);\n        var result = this.commandHandler.deepDiffer.map(oldValues, cloneObject(this.layers));\n        var diffValue = this.commandHandler.deepDiffer.frameObject({}, result);\n        this.oldDiagramObject = { layers: diffValue };\n        this.commandHandler.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    Diagram.prototype.layerObjectUpdate = function () {\n        if (isBlazor()) {\n            this.enableServerDataBinding(false);\n            this.oldDiagramObject['layers'] = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                var leyerObject = cloneObject(this.layers[i]);\n                leyerObject.ejsIndex = this.layers[i].zIndex;\n                this.oldDiagramObject['layers'].push(leyerObject);\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.sendLayerBackward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject, true);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.bringLayerForward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.bringToFront();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendForward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendBackward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    Diagram.prototype.insertBlazorDiagramObjects = function (actualObject) {\n        if (isBlazor() && !(this.blazorActions & BlazorAction.interaction)) {\n            this.enableServerDataBinding(false);\n            if (actualObject instanceof Selector) {\n                for (var i = 0; i < actualObject.nodes.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.nodes[i]);\n                }\n                for (var i = 0; i < actualObject.connectors.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.connectors[i]);\n                }\n            }\n            if (!(actualObject instanceof Selector)) {\n                var object = void 0;\n                if (actualObject && actualObject.children && actualObject.children.length > 0) {\n                    for (var i = 0; i < actualObject.children.length; i++) {\n                        this.insertBlazorDiagramObjects(this.nameTable[actualObject.children[i]]);\n                    }\n                }\n                object = cloneObject(this.nameTable[actualObject.id]);\n                this.insertValue(object, !(getObjectType(actualObject) === Connector));\n            }\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.callBlazorModel = false;\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            if ((this.diagramActions & DiagramAction.DragUsingMouse)) {\n                this.updatePage();\n            }\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction) && !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                this.callBlazorModel = false;\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                this.callBlazorModel = false;\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n                this.callBlazorModel = true;\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /**\n     * Adds the given custom change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addCustomHistoryEntry = function (entry) {\n        if (isBlazor() && this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            entry.type = undefined;\n            entry.category = 'External';\n            this.undoRedoModule.addHistoryEntry(entry, this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    Diagram.prototype.getBlazorDiagramObjects = function (objects) {\n        if (objects) {\n            for (var j = 0; j < objects.length; j++) {\n                this.insertBlazorDiagramObjects(objects[j]);\n            }\n        }\n        else {\n            this.insertBlazorDiagramObjects(this.selectedItems);\n        }\n        this.callBlazorModel = false;\n        this.canEnableBlazorObject = true;\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    Diagram.prototype.updateBlazorDiagramProperties = function (attribute, canCall) {\n        if (isBlazor() && !canCall) {\n            this.enableServerDataBinding(false);\n            for (var i = 0; i < attribute.length; i++) {\n                this.oldDiagramObject[attribute[i]] = cloneObject(this[attribute[i]]);\n            }\n        }\n        if (canCall) {\n            this.commandHandler.getDiagramOldValues(this.oldDiagramObject, attribute);\n        }\n    };\n    Diagram.prototype.getZoomingAttribute = function () {\n        var attribute = [];\n        attribute.push('scrollSettings');\n        attribute.push('snapSettings');\n        return attribute;\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n        if (!(this.blazorActions & BlazorAction.interaction)) {\n            this.updateBlazorDiagramProperties(attribute, true);\n        }\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.resetSegments = function () {\n        var previousConnectorObject = [];\n        var updateConnectorObject = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n        if (isBlazor()) {\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: [], connectors: changeConnectors };\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var eventArgs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (args) {\n                            this.updateEventValue(args);\n                        }\n                        return [4 /*yield*/, this.trigger(DiagramEvent[eventName], args)];\n                    case 1:\n                        eventArgs = _a.sent();\n                        if (isBlazor() && typeof eventArgs === 'string') {\n                            eventArgs = JSON.parse(eventArgs);\n                        }\n                        return [2 /*return*/, eventArgs];\n                }\n            });\n        });\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given diagram object to the group.\n     * @param Group defines where the diagram object to be added.\n     * @param Child defines the diagram object to be added to the group\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addChildToGroup = function (group, child) {\n        this.addChild(group, child);\n    };\n    /**\n     * Will return the history stack values\n     * @param obj returns the history stack values\n     */\n    Diagram.prototype.getHistoryStack = function (isUndoStack) {\n        return isUndoStack ? this.historyManager.undoStack : this.historyManager.redoStack;\n    };\n    /* tslint:disable */\n    /**\n     * Return the edges for the given node\n     * @param obj return the edge of the given node\n     */\n    Diagram.prototype.getEdges = function (args) {\n        return args['outEdge'] ? this.nameTable[args['id']].outEdges : this.nameTable[args['id']].inEdges;\n    };\n    /* tslint:enable */\n    /**\n     * Returns the parent id for the node\n     * @param obj returns the parent id\n     */\n    Diagram.prototype.getParentId = function (id) {\n        return this.nameTable[id].parentId;\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     * @blazorArgsType obj|DiagramConnector\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /** @private */\n    Diagram.prototype.UpdateBlazorDiagramModelCollection = function (obj, copiedObject, multiSelectDelete) {\n        var ejsInterop = 'ejsInterop';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && (!this.isServerUpdate || multiSelectDelete)) {\n            this.isServerUpdate = true;\n            var removalIndexCollection = [];\n            var updatedModelCollection = [];\n            var connectorModelCollection = [];\n            var elements = [];\n            var removalIndex = void 0;\n            var tempNode = [];\n            var objectTypeCollection = [];\n            if (!copiedObject) {\n                if (!multiSelectDelete) {\n                    tempNode = this.commandHandler.getChildren(obj, elements);\n                }\n                else {\n                    tempNode = multiSelectDelete;\n                }\n                for (var i = 0; i < tempNode.length; i++) {\n                    updatedModel = cloneBlazorObject(tempNode[i]);\n                    updatedModelCollection.push(updatedModel);\n                    if (getObjectType(tempNode[i]) === Connector) {\n                        removalIndex = this.connectors.indexOf(tempNode[i]);\n                    }\n                    else {\n                        removalIndex = this.nodes.indexOf(tempNode[i]);\n                    }\n                    removalIndexCollection.push(removalIndex);\n                    objectTypeCollection.push(getObjectType(tempNode[i]) === Connector ? 'Connector' : 'Node');\n                }\n                if (!multiSelectDelete) {\n                    updatedModelCollection.push(cloneBlazorObject(obj));\n                    removalIndexCollection.push(this.nodes.indexOf(obj));\n                    objectTypeCollection.push(getObjectType(obj) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            if (copiedObject && copiedObject.length > 0) {\n                for (var i = 0; i < copiedObject.length; i++) {\n                    updatedModel = cloneBlazorObject(copiedObject[i]);\n                    var isNode = (copiedObject[i] instanceof Node) ? true : false;\n                    isNode ? updatedModelCollection.push(updatedModel) : connectorModelCollection.push(updatedModel);\n                    objectTypeCollection.push(getObjectType(copiedObject[i]) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModelCollection),\n                    'ObjectType': objectTypeCollection,\n                    'removalIndex': copiedObject ? undefined : removalIndexCollection,\n                    'isMultipleObjects': true, 'annotationIndex': undefined,\n                    'connectorObj': JSON.stringify(connectorModelCollection)\n                }\n            };\n            window[ejsInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    Diagram.prototype.UpdateBlazorDiagramModel = function (obj, objectType, removalIndex, annotationNodeIndex) {\n        var ejsInterop = 'ejsInterop';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && !this.isServerUpdate && !(this.diagramActions & DiagramAction.Clear)) {\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModel),\n                    'ObjectType': objectType, 'removalIndex': removalIndex,\n                    'isMultipleObjects': false,\n                    'annotationIndex': annotationNodeIndex, 'connectorObj': undefined\n                }\n            };\n            window[ejsInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.addBlazorDiagramObjects = function () {\n        var nodesCollection = [];\n        var connectorCollection = [];\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                nodesCollection.push(cloneObject(this.nodes[i], undefined, undefined, true));\n            }\n            for (var i = 0; i < this.connectors.length; i++) {\n                connectorCollection.push(cloneObject(this.connectors[i], undefined, undefined, true));\n            }\n        }\n        var ejsInterop = 'ejsInterop';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(nodesCollection), 'isConnector': false }\n            };\n            window[ejsInterop].updateBlazorProperties(obj, this);\n            obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(connectorCollection), 'isConnector': true }\n            };\n            window[ejsInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    this.UpdateBlazorDiagramModel(newObj, \"Connector\");\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    this.UpdateBlazorDiagramModel(newObj, \"Node\");\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (isBlazor() && (obj.id !== 'helper')) {\n                            this.UpdateBlazorDiagramModel(obj, \"Node\", index);\n                        }\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        this.UpdateBlazorDiagramModel(obj, \"Connector\", index);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    if (isBlazor()) {\n                        if (!this.isServerUpdate && selectedItems && selectedItems.length > 1) {\n                            this.isServerUpdate = true;\n                            this.UpdateBlazorDiagramModelCollection(selectedItems[0], undefined, selectedItems);\n                        }\n                        if (selectedItems[i].parentId) {\n                            this.insertBlazorDiagramObjects(this.nameTable[selectedItems[i].parentId]);\n                        }\n                    }\n                    this.remove(selectedItems[i]);\n                    if (isBlazor() && selectedItems[i].parentId) {\n                        this.commandHandler.getBlazorOldValues();\n                        this.isServerUpdate = false;\n                    }\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n        if (isBlazor() && selectedItems && selectedItems.length > 0) {\n            var check = true;\n            for (var k = 0; k < selectedItems.length; k++) {\n                if (this.nameTable[selectedItems[k].id]) {\n                    check = false;\n                }\n            }\n            if (check) {\n                this.isServerUpdate = false;\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     * @deprecated\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /* tslint:disable */\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(node);\n                    if (selectedNode.annotations.length > 0) {\n                        this.insertValue(selectedNode, (node instanceof Node) ? true : false);\n                    }\n                    node = this.nameTable[node.id] || node;\n                }\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                if (nodes && nodes.length > 0) {\n                    this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                }\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        if (update) {\n            this.updateDiagramElementQuad();\n        }\n        return ((this.blazorActions & BlazorAction.expandNode) ? layout : true);\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     * @deprecated\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                this.UpdateBlazorDiagramModel(newObj, 'NodeAnnotation', undefined, this.nodes.indexOf(obj));\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_2 = 0; i_2 < node.wrapper.children.length; i_2++) {\n                        if (node.wrapper.children[i_2].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_2];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                this.UpdateBlazorDiagramModel(newObj, 'ConnectorAnnotation', undefined, this.connectors.indexOf(obj));\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.updateBazorShape = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            switch (node.shape.type) {\n                case 'Bpmn':\n                    node.shape.bpmnShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.bpmnShape;\n                    break;\n                case 'UmlActivity':\n                    node.shape.umlActivityShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.umlActivityShape;\n                    break;\n                case 'Flow':\n                    node.shape.flowShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.flowShape;\n                    break;\n                case 'Basic':\n                    node.shape.basicShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.basicShape;\n                    break;\n                case 'Text':\n                    node.shape.textContent =\n                        node.shape.content ? node.shape.content\n                            : node.shape.textContent;\n                    break;\n            }\n        }\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        this.updateBazorShape();\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        var previousNodeObject = [];\n        var previousConnectorObject = [];\n        var updateNodeObject = [];\n        var updateConnectorObject = [];\n        var changeNodes = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousNodeObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        for (var _d = 0, _e = this.nodes; _d < _e.length; _d++) {\n            var obj = _e[_d];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _f = 0, _g = this.connectors; _f < _g.length; _f++) {\n            var obj = _g[_f];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _h = 0, _j = this.layers; _h < _j.length; _h++) {\n            var layer = _j[_h];\n            for (var _k = 0, _l = layer.objects; _k < _l.length; _k++) {\n                var obj = _l[_k];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _m = 0, _o = this.bpmnModule.textAnnotationConnectors; _m < _o.length; _m++) {\n                    var obj = _o[_m];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _p = 0, _q = Object.keys(bpmnTable); _p < _q.length; _p++) {\n            var obj = _q[_p];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _r = 0, groups_1 = groups; _r < groups_1.length; _r++) {\n            var obj = groups_1[_r];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _s = 0, connectors_1 = connectors; _s < connectors_1.length; _s++) {\n            var connector = connectors_1[_s];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n        if (isBlazor()) {\n            for (var _t = 0, _u = this.nodes; _t < _u.length; _t++) {\n                var obj = _u[_t];\n                updateNodeObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            for (var _v = 0, _w = this.connectors; _v < _w.length; _v++) {\n                var obj = _w[_v];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var ejsInterop = 'ejsInterop';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n            if (window && window[blazor] && this.diagramActions && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[ejsInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor() && this.scrollChange) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults.ports) {\n                                for (var i = 0; i < defaults.ports.length; i++) {\n                                    defaults.ports[i].inEdges = [];\n                                    defaults.ports[i].outEdges = [];\n                                }\n                            }\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== ''\n                    && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== ''\n                    && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false, this.annotationTemplate);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, false);\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, true);\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortEdges = function (node, obj, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                var portId = (isInEdges) ? obj.targetPortID : obj.sourcePortID;\n                if (port.id === portId) {\n                    var portEdges = (isInEdges) ? port.inEdges : port.outEdges;\n                    if (portEdges.indexOf(obj.id) === -1) {\n                        portEdges.push(obj.id);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n        this.addBlazorDiagramObjects();\n        if (isBlazor() && this.layout && this.layout.layoutInfo && this.layout.layoutInfo.isRootInverse && this.nodes.length > 2) {\n            var rootNode = this.nodes[0];\n            if (rootNode.outEdges.length > 1) {\n                var isProtectedChange = this.isProtectedOnChange;\n                var connector = this.nameTable[rootNode.outEdges[1]];\n                this.protectPropertyChange(false);\n                this.preventUpdate = true;\n                connector.sourcePortID = rootNode.ports[1].id;\n                this.preventUpdate = false;\n                this.dataBind();\n                this.protectPropertyChange(isProtectedChange);\n            }\n        }\n        if (isBlazor()) {\n            var view = void 0;\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                view = this.views[temp];\n                if (view.renderDocument) {\n                    view.renderDocument(view);\n                    view.diagramRenderer.setLayers();\n                    view.updateView(view);\n                    this.renderNodes(view);\n                }\n            }\n        }\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        var domTable = 'domTable';\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        if (!window[domTable][view.element.id + '_diagramLayer']) {\n                            window[domTable][view.element.id + '_diagramLayer'] =\n                                document.getElementById(view.element.id + '_diagramLayer');\n                        }\n                        var diagramElementsLayer = window[domTable][view.element.id + '_diagramLayer'];\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var domTable = 'domTable';\n        if (!window[domTable][this.element.id + 'content']) {\n            window[domTable][this.element.id + 'content'] = document.getElementById(this.element.id + 'content');\n        }\n        var container = window[domTable][this.element.id + 'content'];\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        if (!(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n        }\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n        this.commandHandler.updateBlazorSelector();\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if ((!isBlazor() && node.shape.shape === 'Activity') ||\n                (isBlazor() && node.shadow.bpmnShape === 'Activity')) {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    /* tslint:disable */\n    Diagram.prototype.endEdit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var textArea, text, element, args, bpmnAnnotation, node, textWrapper, deleteNode, annotation, clonedObject, selectedNode, swimLaneNode, laneHeader, phaseHeader, collection, j;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.diagramActions & DiagramAction.TextEdit)) return [3 /*break*/, 9];\n                        this.enableServerDataBinding(false);\n                        textArea = document.getElementById(this.element.id + '_editBox');\n                        if (!((isBlazor() && textArea) || !isBlazor())) return [3 /*break*/, 9];\n                        text = textArea.value;\n                        EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n                        EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n                        element = document.getElementById(this.element.id + '_editTextBoxDiv');\n                        args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n                        bpmnAnnotation = false;\n                        node = void 0;\n                        element.parentNode.removeChild(element);\n                        textWrapper = void 0;\n                        if (!this.bpmnModule) return [3 /*break*/, 4];\n                        node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                        textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                        bpmnAnnotation = node ? true : false;\n                        if (!bpmnAnnotation) return [3 /*break*/, 4];\n                        if (!(element.textContent !== text || text !== this.activeLabel.text)) return [3 /*break*/, 4];\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 1:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 3;\n                    case 3:\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                        _a.label = 4;\n                    case 4:\n                        if (!!bpmnAnnotation) return [3 /*break*/, 8];\n                        node = this.nameTable[this.activeLabel.parentId];\n                        deleteNode = this.eventHandler.isAddTextNode(node, true);\n                        if (!(!deleteNode && (element.textContent !== text || text !== this.activeLabel.text))) return [3 /*break*/, 7];\n                        if (!isBlazor()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 5:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 7;\n                    case 7:\n                        if (!textWrapper) {\n                            textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                        }\n                        annotation = findAnnotation(node, this.activeLabel.id);\n                        if (annotation.content !== text && !args.cancel) {\n                            if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                                && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                                && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                                text = ' + ' + text;\n                            }\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(true);\n                            }\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                node.shape.textContent = text;\n                            }\n                            annotation.content = text;\n                            this.dataBind();\n                            this.updateSelector();\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(false);\n                            }\n                        }\n                        if (deleteNode) {\n                            this.removeObjectsFromLayer(node);\n                            this.removeFromAQuad(node);\n                            delete this.nameTable[this.activeLabel.parentId];\n                            if (text !== '') {\n                                this.clearSelection();\n                                clonedObject = cloneObject(node);\n                                node = this.add(clonedObject);\n                                this.updateDiagramObject(node);\n                                this.commandHandler.select(this.nameTable[node.id]);\n                            }\n                        }\n                        _a.label = 8;\n                    case 8:\n                        if (this.selectedItems.nodes.length) {\n                            selectedNode = this.nameTable[this.activeLabel.parentId];\n                            swimLaneNode = this.nameTable[selectedNode.parentId];\n                            if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                                laneHeader = 'LaneHeaderParent';\n                                phaseHeader = 'PhaseHeaderParent';\n                                if ((selectedNode.shape.type === 'SwimLane')) {\n                                    swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                                    selectedNode = node;\n                                }\n                                if ((selectedNode.isLane || selectedNode.isPhase)) {\n                                    collection = selectedNode.isLane ?\n                                        swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                                    for (j = 0; j < collection.length; j++) {\n                                        if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                            collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                                        }\n                                    }\n                                }\n                                else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                                    swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                                }\n                            }\n                            this.dataBind();\n                        }\n                        textWrapper.visible = true;\n                        this.updateDiagramObject(node);\n                        this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n                        if (this.activeLabel.isGroup) {\n                            this.endGroupAction();\n                        }\n                        this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n                        this.commandHandler.getBlazorOldValues();\n                        this.enableServerDataBinding(true);\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        if (isBlazor()) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (node.id === this.nodes[i].id) {\n                    this.UpdateBlazorDiagramModel(node, 'Node', i);\n                }\n            }\n        }\n        this.UpdateBlazorDiagramModel(node, 'Node', (this.nodes.indexOf(node)));\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        this.UpdateBlazorDiagramModelCollection(node);\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /** @private */\n    Diagram.prototype.insertValue = function (oldNodeObject, isNode) {\n        var value;\n        var oldObjects = isNode ? this.oldNodeObjects : this.oldConnectorObjects;\n        for (var i = 0; i < oldObjects.length; i++) {\n            if (oldObjects[i].id === oldNodeObject.id) {\n                value = true;\n            }\n        }\n        if (!value) {\n            isNode ? (this.oldNodeObjects.push(oldNodeObject)) : this.oldConnectorObjects.push(oldNodeObject);\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node_2 = cloneObject(actualObject);\n            this.insertValue(node_2, true);\n        }\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n            (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode'))) {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_3 = 0; i_3 < objects_2.length; i_3++) {\n                            var object = objects_2[i_3];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_3], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node = cloneObject(actualObject);\n            this.insertValue(node, false);\n        }\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.sourceID] || sourceNode, oldProp.sourcePortID || actualObject.sourcePortID, actualObject.id, false);\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.targetID] || targetNode, oldProp.targetPortID || actualObject.targetPortID, actualObject.id, true);\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && (canMeasureDecoratorPath(Object.keys(newProp.targetDecorator)))) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.removePortEdges = function (node, portId, item, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                if (port.id === portId) {\n                    var portEdge = (isInEdges) ? port.inEdges : port.outEdges;\n                    removeItem(portEdge, item);\n                }\n            }\n        }\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if (actualObject.shape.type === 'UmlActivity' &&\n                    ((isBlazor && actualObject.shape.umlActivityShape === 'StructuredNode') ||\n                        (!isBlazor && actualObject.shape.shape === 'StructuredNode'))) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if ((this.diagramActions & DiagramAction.Render) &&\n            !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.getProtectPropertyChangeValue = function () {\n        return this.isProtectedOnChange;\n    };\n    /** @private */\n    Diagram.prototype.enableServerDataBinding = function (enable) {\n        if (isBlazor()) {\n            this.allowServerDataBinding = enable;\n            if (enable) {\n                this.bulkChanges = {};\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    var nodeDragSize = void 0;\n                    var nodePreviewSize = void 0;\n                    var paletteDragSize = void 0;\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            _this.allowServerDataBinding = false;\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                nodeDragSize = newNode.dragSize;\n                                nodePreviewSize = newNode.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                var palettePreview = sourceElement['symbolPreview'];\n                                newNode.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || palettePreview.width || newNode.width;\n                                newNode.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || palettePreview.height || newNode.height;\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        group.previewSize = newNode.previewSize;\n                                        group.dragSize = newNode.dragSize;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                nodeDragSize = newObj.dragSize;\n                                nodePreviewSize = newObj.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                laneObj.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || laneObj.width;\n                                laneObj.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || laneObj.height;\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                        _this.allowServerDataBinding = true;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var source, value, isPhase, orientation_2, isConnector, newObj, node, conn, arg, clonedObject, id, nodeId, arg, clonedObject, id, selectedSymbols;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        source = 'sourceElement';\n                        if (!this.currentSymbol) return [3 /*break*/, 4];\n                        isPhase = false;\n                        isConnector = void 0;\n                        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n                        if (args.event.touches) {\n                            this.eventHandler.mouseUp(args.event);\n                        }\n                        newObj = void 0;\n                        node = void 0;\n                        conn = void 0;\n                        arg = void 0;\n                        arg = {\n                            source: this.droppable[source],\n                            element: this.currentSymbol,\n                            target: this.eventHandler['hoverNode'] || this.eventHandler['lastObjectUnderMouse'] || this, cancel: false,\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        arg = {\n                            source: cloneBlazorObject(this.droppable[source]),\n                            element: getObjectType(this.currentSymbol) === Connector ? { connector: cloneBlazorObject(this.currentSymbol) } : { node: cloneBlazorObject(this.currentSymbol) },\n                            cancel: false, target: {},\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        this.getDropEventArgs(arg);\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.drop, arg)];\n                    case 1:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 3;\n                    case 3:\n                        clonedObject = void 0;\n                        id = 'id';\n                        clonedObject = cloneObject(this.currentSymbol);\n                        clonedObject['hasTarget'] = this.currentSymbol['hasTarget'];\n                        this.removeFromAQuad(this.currentSymbol);\n                        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n                        this.removeElements(this.currentSymbol);\n                        if (this.currentSymbol.shape.isLane ||\n                            this.currentSymbol.shape.isPhase) {\n                            this.removeChildInNodes(this.currentSymbol);\n                        }\n                        if (arg.cancel) {\n                            removeChildNodes(this.currentSymbol, this);\n                        }\n                        if (this.currentSymbol.shape.isPhase) {\n                            isPhase = true;\n                            orientation_2 = this.currentSymbol.shape.orientation;\n                        }\n                        delete this.nameTable[this.currentSymbol.id];\n                        this.currentSymbol = null;\n                        this.protectPropertyChange(true);\n                        if (!arg.cancel) {\n                            this.startGroupAction();\n                            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                                if (isPhase) {\n                                    clonedObject.shape.isPhase = isPhase;\n                                    clonedObject.shape.orientation = orientation_2;\n                                }\n                                this.eventHandler.addSwimLaneObject(clonedObject);\n                            }\n                            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                                && clonedObject['hasTarget']) {\n                                nodeId = clonedObject.shape.annotation.nodeId;\n                                clonedObject.shape.annotation.id = clonedObject.id;\n                                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                                clonedObject.nodeId = '';\n                            }\n                            if (!clonedObject.shape.isLane && !isPhase) {\n                                if (clonedObject.children) {\n                                    this.addChildNodes(clonedObject);\n                                }\n                                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                                    && canAllowDrop(arg.target)) {\n                                    addChildToContainer(this, arg.target, clonedObject);\n                                }\n                                else {\n                                    this.allowServerDataBinding = false;\n                                    value = this.add(clonedObject, true);\n                                    this.allowServerDataBinding = true;\n                                }\n                                if ((clonedObject || value) && canSingleSelect(this)) {\n                                    this.select([this.nameTable[clonedObject[id]]]);\n                                }\n                            }\n                        }\n                        else {\n                            this.clearSelectorLayer();\n                        }\n                        this.protectPropertyChange(false);\n                        newObj = this.nameTable[clonedObject[id]];\n                        if (clonedObject['hasTarget']) {\n                            clonedObject.nodeId = clonedObject['hasTarget'];\n                            this.remove(clonedObject);\n                        }\n                        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                            newObj.processId = clonedObject.processId;\n                            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n                        }\n                        this.endGroupAction();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        delete this.droppable[source];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        arg = {\n                            source: cloneBlazorObject(args.droppedElement),\n                            element: undefined,\n                            target: cloneBlazorObject(this.eventHandler['hoverNode'] || (this.eventHandler['lastObjectUnderMouse']) || this), cancel: false,\n                            position: undefined\n                        };\n                        if (isBlazor()) {\n                            arg = {\n                                source: cloneBlazorObject(args.droppedElement),\n                                element: undefined,\n                                cancel: false,\n                                position: undefined,\n                                target: {}\n                            };\n                            this.getDropEventArgs(arg);\n                        }\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        clonedObject = void 0;\n                        id = 'id';\n                        _a.label = 5;\n                    case 5:\n                        selectedSymbols = 'selectedSymbols';\n                        if (this.droppable[selectedSymbols]) {\n                            remove(this.droppable[selectedSymbols]);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                var args_1 = {\n                    element: cloneBlazorObject(_this.currentSymbol),\n                    diagram: _this\n                };\n                if (isBlazor()) {\n                    args_1 = _this.getBlazorDragLeaveEventArgs(args_1);\n                }\n                _this.triggerEvent(DiagramEvent.dragLeave, args_1);\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getBlazorDragLeaveEventArgs = function (args) {\n        args = {\n            diagram: cloneBlazorObject(this),\n            element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) }\n        };\n        return args;\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"annotationTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        var node;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    diagram.protectPropertyChange(true);\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.protectPropertyChange(false);\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var node;\n        var nodes;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        var returnNode;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagramArgs, _i, _a, item, _b, _c, newItem, hidden, contextItems, i, item, i, item;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.parent.checkMenu &&\n                            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.parent.checkMenu = args.cancel = true;\n                        }\n                        if (this.parent.checkMenu) {\n                            this.hiddenItems = [];\n                        }\n                        diagramArgs = args;\n                        diagramArgs.hiddenItems = [];\n                        for (_i = 0, _a = args.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            this.ensureItems(item, args.event);\n                            if (item.items.length) {\n                                for (_b = 0, _c = item.items; _b < _c.length; _b++) {\n                                    newItem = _c[_b];\n                                    this.ensureItems(newItem, args.event);\n                                }\n                            }\n                        }\n                        this.eventArgs = args.event;\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.parent.trigger(contextMenuOpen, diagramArgs)];\n                    case 1:\n                        diagramArgs = (_d.sent());\n                        if (typeof diagramArgs === 'string') {\n                            diagramArgs = JSON.parse(diagramArgs);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.parent.trigger(contextMenuOpen, diagramArgs);\n                        _d.label = 3;\n                    case 3:\n                        hidden = true;\n                        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n                        this.contextMenu.enableItems(this.disableItems, false, true);\n                        contextItems = this;\n                        for (i = 0; i < args.items.length; i++) {\n                            item = args.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                                contextItems.contextMenu.hideItems([item.id], true);\n                            }\n                        }\n                        for (i = 0; i < contextItems.contextMenu.items.length; i++) {\n                            item = contextItems.contextMenu.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                                hidden = false;\n                                contextItems.contextMenu.showItems([item.id], true);\n                            }\n                        }\n                        if (hidden) {\n                            diagramArgs.cancel = hidden;\n                            this.hiddenItems = [];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.undo(entry);\n                }\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, node instanceof Node ? true : false);\n        }\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, true);\n        }\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.sourceID], connector.sourcePortID, connector.id, false);\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.targetID], connector.targetPortID, connector.id, true);\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, false);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, true);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.redo(entry);\n                }\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        this.considerWalkable = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var extraBounds = this.size;\n        if (diagram.spatialSearch['pageTop'] < 0 || diagram.spatialSearch['pageLeft'] < 0) {\n            extraBounds = this.size + (this.size / 2);\n        }\n        var right = diagram.spatialSearch['pageRight'] + extraBounds;\n        var bottom = diagram.spatialSearch['pageBottom'] + extraBounds;\n        var left = diagram.spatialSearch['pageLeft'] - extraBounds;\n        var top = diagram.spatialSearch['pageTop'] - extraBounds;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    this.considerWalkable.push(grid_1);\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1 ||\n                    this.considerWalkable.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            var check = void 0;\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1 ? shape1.tree.children && shape1.tree.children.length : 0;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                // x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(ChildProperty));\nexport { SymbolDragSize };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Complex({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","enableServerDataBinding","nodes","isBlazor","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","getSpaceValue","intervals","isLine","space","getInterval","newInterval","setUMLActivityDefaults","umlActivityShape","umlActivityFlow","flow","setConnectorDefaults","bpmnFlow","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","hasSubTree","canEnableSubTree","layoutInfo","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","updateGradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","basicShape","flowShapeElement","flowShape","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","cloneBlazorObject","getDropEventArguements","arg","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","canMeasureDecoratorPath","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","callback","imageElement","createElement","setAttributeHtml","onload","event","loadedImage","currentTarget","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","expandCollapse","elementType","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","nodeObject","sentNode","isTemplate","compiledString","getNodeTemplate","template","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","getTemplateContent","annotationcontent","annotationTemplate","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","getIndex","comp","templateCompiler","querySelectorAll","baseTemplateComplier","innerHTML","trim","updateCloneProp","Decorator","Shape","IconShape","BpmnTask","BpmnSubProcess","Port","Annotation","Margin","TextStyle","ShapeStyle","additionalProp","cloneBlazorProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","DiagramGradient","LinearGradient","RadialGradient","Thickness","Gradient","Collection","ComplexFactory","DiagramShapeStyle","BlazorAction","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Complex","Connect","Hyperlink","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","DiagramTooltip","NodeBase","nodeTemplate","templateFn","SymbolSize","getConnectorType","DiagramConnectorShape","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","DiagramConnectorSegment","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","annotationType","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","checkPort","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","LayoutInfo","getShapeType","DiagramShape","BpmnTransactionSubProcess","trigger","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","bpmnShape","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","disableConnectors","disableNodes","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","gridType","verticalLineIntervals","verticalGridlines","lineIntervals","dotIntervals","horizontalLineIntervals","horizontalGridlines","dynamicGrid","scaledIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","lineDashArray","updateLineIntervals","lineColor","renderDotGrid","spacey","vLine","updateGrid","svgGrid","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","domTable","updateNode","diagramElementsLayer","insertIndex","Background","FitOptions","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","DeepDiffMapper","valueCreated","valueUpdated","valueDeleted","valueUnchanged","newNodeObject","newConnectorObject","diagramObject","updateObjectCollection","getOldObject","isNode","oldNodeObjects","oldConnectorObjects","changeSegments","removeNullValues","newSegments","removeNullObjectValues","newSegObject","getDifferenceValues","labelDrag","diffValue","frameObject","removeEmptyValues","getDiagramObjects","getLayerObject","oldDiagram","diffLayers","newDiagram","ejsIndex","tempObject","objectValue","removeArrayValues","newValue","frame","obj1","obj2","arrayName","isFunction","isValue","compareValues","ss","value2","kk","value1","isDate","getTime","isObject","final","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","__generator","verb","op","f","TypeError","_","ops","pop","trys","sent","throw","return","Symbol","iterator","ToolBase","protectChange","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","enableCloneObject","ismouseEvents","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","updateBlazorSelector","selectObjects","labelSelect","ConnectTool","isConnected","temparg","oldValue","segmentpoint1","segmentpoint2","oldConnector","connectorTargetValue","connectorEnd","connectionChange","tempArgs","canCancel","ConnectorDrawingTool","selectedSegment","nodeEndId","portEndId","oldValues","targetPortName","targetNodeNode","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","findTarget","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","targetPosition","allowDrop","isPreventHistory","blazorArgs","historyAdded","entry_1","snappedPoint","isEndGroup","positionChange","dragSelectedObjects","getBlazorPositionChangeEventArgs","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","blazarArgs","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","getChanges","change","AspectRatio","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseUp","onUserHandleMouseEnter","onUserHandleMouseDown","userHandleObject","isScrolling","preventDefault","oldSelectedObjects","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","blazorActions","interaction","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","mouseEnter","getBlazorCollectionObject","lastObjectUnderMouse","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","objj1","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","newSelectedObjects","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","newChanges","oldChanges","connectionEnd","connectorSourceValue","dragOverArg","dragOver","returnargs","checkBlazor","connectionEventChange","connectedNode","insertValue","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","UpdateBlazorDiagramModelLayers","updatedModel","methodName","diagramobj","updateBlazorProperties","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","copiedObject","isServerUpdate","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","UpdateBlazorDiagramModelCollection","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","oldProtectPropertyChangeValue","getProtectPropertyChangeValue","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","isObjectInteraction","canEnableBlazorObject","updateLayerObject","getDiagramOldValues","oldNodeObject","oldConnectorObject","getObjectChanges","previousObject","changedNodes","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","isGroupDragging","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","pivotValue","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","DragUsingMouse","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","previousNodeObject","previousConnectorObject","updateNodeObject","updateConnectorObject","changeNodes","changeConnectors","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","oldDiagramObject","groupTable","isGroup","callBlazorModel","selectionConnectorsList","changedConnectorCollection","changedNodesCollection","crudDeleteNodes","diagramid","renderTimer","ignoreCollectionWatch","updateAnnotationText","defaultConnector","defaultPropChanges","bulkChanges","join","callFromServer","isOutEdge","loadDiagram","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","Render","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","changedConnectors","ejsInterop","blazor","dataSource","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","updateTemplate","updateFitToPage","fitOptions","canFit","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","send","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","getZoomingAttribute","updateBlazorDiagramProperties","cutCommand","removeProcess","pasteCommand","copyCommand","insertBlazorDiagramObjects","layerObjectUpdate","leyerObject","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","addCustomHistoryEntry","sourceValue","historyChange","undo","redo","getBlazorDiagramObjects","PublicMethod","canCall","focusedPoint","zoomTo","resetSegments","updateEventValue","addNodeToLane","hideTooltip","addNode","addChildToGroup","getHistoryStack","isUndoStack","undoStack","redoStack","getEdges","getParentId","addConnector","multiSelectDelete","removalIndexCollection","updatedModelCollection","connectorModelCollection","removalIndex","objectTypeCollection","dgmObj","nodeObj","ObjectType","isMultipleObjects","annotationIndex","UpdateBlazorDiagramModel","annotationNodeIndex","Clear","addBlazorDiagramObjects","nodesCollection","connectorCollection","dataBindingModule","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","check","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","updateBazorShape","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","_o","_p","_q","_r","groups_1","_s","connectors_1","_t","_u","_v","_w","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","isInEdges","portEdges","refreshDiagram","isRootInverse","isProtectedChange","renderDocument","renderNodes","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","phaseHeader","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","node_2","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","removePortEdges","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","allowServerDataBinding","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","nodeDragSize","nodePreviewSize","paletteDragSize","ej2_instances","dragSize","previewSize","palettePreview","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","selectedSymbols","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","args_1","getBlazorDragLeaveEventArgs","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","considerWalkable","isUpdate","extraBounds","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolDragSize","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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"}