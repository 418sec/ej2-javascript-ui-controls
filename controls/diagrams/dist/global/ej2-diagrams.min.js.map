{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/ruler/ruler.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        maxHeight: 25, minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        maxHeight: 25, minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, maxHeight: 25, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(child.desiredSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            obj.width = helperObject.width;\n            obj.height = helperObject.height;\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        //let diff: number = helperObject.width - container.colDefns[obj.columnIndex].width;\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                        //parentNode.width += diff;\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    this.diagram.updateConnectorEdges(obj);\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'Canvas') {\n            for (var _f = 0, _g = this.views; _f < _g.length; _f++) {\n                var temp = _g[_f];\n                var view = void 0;\n                view = this.views[temp];\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n            }\n            layer.zIndexTable[obj.zIndex] = obj.id;\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                }\n                else {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && !this.diagramActions);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf(' + ') === -1 && node.id.indexOf('')) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        annotationWrapper =\n            actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        if (this.nestedBestRanks[j][cell.temp[0]]) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","bottomLeft","middleLeft","topRight","bottomCenter","middleRight","bottomRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","isTarget","reverse","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","verticalAlignment","horizontalAlignment","initObject","nodes","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","randomId","maxHeight","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","canMeasurePath","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","canMeasure","textNodes","textWrapBounds","imageSource","stretch","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","updateConnectorEdges","UndoRedo","innerNode","zIndex","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","show","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","refreshCanvasDiagramLayer","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateGridContainer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","annotationWrapper","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","portWrapper","String","iconRect","iconShape","enable","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}